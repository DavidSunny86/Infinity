/* WARNING: This file was automatically generated */
/* Do not edit. */

#ifndef __gl_h_
#define __gl_h_

#ifdef __cplusplus
extern "C" {
#endif

/* Function declaration macros - to move into glplatform.h */

#if defined(_WIN32) && !defined(APIENTRY) && !defined(__CYGWIN__) && !defined(__SCITECH_SNAP__)
#define WIN32_LEAN_AND_MEAN 1
#ifndef WINAPI
#define WINAPI __stdcall
#endif
#define APIENTRY WINAPI
#endif

#ifndef APIENTRY
#define APIENTRY
#endif
#ifndef APIENTRYP
#define APIENTRYP APIENTRY *
#endif
#ifndef GLAPI
#define GLAPI extern
#endif

/* -------------------------------- DATA TYPES ------------------------------- */

#include <stddef.h>
#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef char GLchar;
typedef unsigned short GLhalf;
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef struct __GLsync *GLsync;
typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);

/* ----------------------------------- ENUMS --------------------------------- */

/* GL_VERSION_1_1 */

#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_FALSE 0
#define GL_TRUE 1
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_ZERO 0
#define GL_ONE 1
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_NONE 0
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_NO_ERROR 0
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_OUT_OF_MEMORY 0x0505
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_VIEWPORT 0x0BA2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_DRAW_BUFFER 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_DOUBLE 0x140A
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_DEPTH 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_INDEX 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_GREEN 0x1904
#define GL_BLUE 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_POINT 0x1B00
#define GL_LINE 0x1B01
#define GL_FILL 0x1B02
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_REPEAT 0x2901
#define GL_R3_G3_B2 0x2A10
#define GL_RGB4 0x804F
#define GL_RGB5 0x8050
#define GL_RGB8 0x8051
#define GL_RGB10 0x8052
#define GL_RGB12 0x8053
#define GL_RGB16 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA4 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGBA8 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA16 0x805B

/* GL_VERSION_1_2 */

#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_BGR 0x80E0
#define GL_BGRA 0x80E1
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E

/* GL_VERSION_1_3 */

#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_MULTISAMPLE 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_CLAMP_TO_BORDER 0x812D

/* GL_VERSION_1_4 */

#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_INCR_WRAP 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_SUBTRACT 0x800A
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_MIN 0x8007
#define GL_MAX 0x8008
#define GL_CONSTANT_COLOR 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004

/* GL_VERSION_1_5 */

#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_CURRENT_QUERY 0x8865
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_ARRAY_BUFFER 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_READ_ONLY 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_SAMPLES_PASSED 0x8914
#define GL_SRC1_ALPHA 0x8589

/* GL_VERSION_2_0 */

#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_SHADER_TYPE 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_DELETE_STATUS 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5

/* GL_VERSION_2_1 */

#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_SRGB 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49

/* GL_VERSION_3_0 */

#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAJOR_VERSION 0x821B
#define GL_MINOR_VERSION 0x821C
#define GL_NUM_EXTENSIONS 0x821D
#define GL_CONTEXT_FLAGS 0x821E
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RG 0x8226
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_RGBA32F 0x8814
#define GL_RGB32F 0x8815
#define GL_RGBA16F 0x881A
#define GL_RGB16F 0x881B
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_FIXED_ONLY 0x891D
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_RGB9_E5 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_RGBA32UI 0x8D70
#define GL_RGB32UI 0x8D71
#define GL_RGBA16UI 0x8D76
#define GL_RGB16UI 0x8D77
#define GL_RGBA8UI 0x8D7C
#define GL_RGB8UI 0x8D7D
#define GL_RGBA32I 0x8D82
#define GL_RGB32I 0x8D83
#define GL_RGBA16I 0x8D88
#define GL_RGB16I 0x8D89
#define GL_RGBA8I 0x8D8E
#define GL_RGB8I 0x8D8F
#define GL_RED_INTEGER 0x8D94
#define GL_GREEN_INTEGER 0x8D95
#define GL_BLUE_INTEGER 0x8D96
#define GL_RGB_INTEGER 0x8D98
#define GL_RGBA_INTEGER 0x8D99
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGRA_INTEGER 0x8D9B
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_DEPTH_STENCIL 0x84F9
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_FRAMEBUFFER 0x8D40
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX16 0x8D49
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_MAX_SAMPLES 0x8D57
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_HALF_FLOAT 0x140B
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_RG 0x8227
#define GL_RG_INTEGER 0x8228
#define GL_R8 0x8229
#define GL_R16 0x822A
#define GL_RG8 0x822B
#define GL_RG16 0x822C
#define GL_R16F 0x822D
#define GL_R32F 0x822E
#define GL_RG16F 0x822F
#define GL_RG32F 0x8230
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_VERTEX_ARRAY_BINDING 0x85B5

/* GL_VERSION_3_1 */

#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_INVALID_INDEX 0xFFFFFFFFu

/* GL_VERSION_3_2 */

#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_DEPTH_CLAMP 0x864F
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_OBJECT_TYPE 0x9112
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_UNSIGNALED 0x9118
#define GL_SIGNALED 0x9119
#define GL_ALREADY_SIGNALED 0x911A
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_CONDITION_SATISFIED 0x911C
#define GL_WAIT_FAILED 0x911D
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFull
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_INTEGER_SAMPLES 0x9110

/* GL_VERSION_3_3 */

#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_SRC1_COLOR 0x88F9
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_SAMPLER_BINDING 0x8919
#define GL_RGB10_A2UI 0x906F
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIMESTAMP 0x8E28
#define GL_INT_2_10_10_10_REV 0x8D9F

/* GL_VERSION_4_0 */

#define GL_SAMPLE_SHADING 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_PATCHES 0x000E
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_ISOLINES 0x8E7A
#define GL_QUADS 0x0007
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_MAX_VERTEX_STREAMS 0x8E71

/* GL_VERSION_4_1 */

#define GL_FIXED 0x140C
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_LOW_FLOAT 0x8DF0
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_HIGH_FLOAT 0x8DF2
#define GL_LOW_INT 0x8DF3
#define GL_MEDIUM_INT 0x8DF4
#define GL_HIGH_INT 0x8DF5
#define GL_SHADER_COMPILER 0x8DFA
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_RGB565 0x8D62
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_ACTIVE_PROGRAM 0x8259
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_MAX_VIEWPORTS 0x825B
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_UNDEFINED_VERTEX 0x8260

/* GL_VERSION_4_2 */

#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F

/* GL_VERSION_4_3 */

#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_COMPUTE_SHADER 0x91B9
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_BUFFER 0x82E0
#define GL_SHADER 0x82E1
#define GL_PROGRAM 0x82E2
#define GL_VERTEX_ARRAY 0x8074
#define GL_QUERY 0x82E3
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_SAMPLER 0x82E6
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_MAX_WIDTH 0x827E
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_COLOR_COMPONENTS 0x8283
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_COLOR_RENDERABLE 0x8286
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_MIPMAP 0x8293
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_COLOR_ENCODING 0x8296
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_FILTER 0x829A
#define GL_VERTEX_TEXTURE 0x829B
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_CLEAR_BUFFER 0x82B4
#define GL_TEXTURE_VIEW 0x82B5
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_FULL_SUPPORT 0x82B7
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_NAME_LENGTH 0x92F9
#define GL_TYPE 0x92FA
#define GL_ARRAY_SIZE 0x92FB
#define GL_OFFSET 0x92FC
#define GL_BLOCK_INDEX 0x92FD
#define GL_ARRAY_STRIDE 0x92FE
#define GL_MATRIX_STRIDE 0x92FF
#define GL_IS_ROW_MAJOR 0x9300
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_IS_PER_PATCH 0x92E7
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STACK_OVERFLOW 0x0503

/* GL_VERSION_4_4 */

#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_CLEAR_TEXTURE 0x9365
#define GL_LOCATION_COMPONENT 0x934A
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_INDEX8 0x8D48
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B

/* GL_EXT_direct_state_access */

#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F

/* --------------------------- FUNCTION PROTOTYPES --------------------------- */


/* GL_EXT_direct_state_access */

typedef void (APIENTRY PFNGLBINDMULTITEXTUREEXT_PROC (GLenum texunit, GLenum target, GLuint texture));
typedef GLenum (APIENTRY PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXT_PROC (GLuint framebuffer, GLenum target));
typedef void (APIENTRY PFNGLCLEARNAMEDBUFFERDATAEXT_PROC (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data));
typedef void (APIENTRY PFNGLCLEARNAMEDBUFFERSUBDATAEXT_PROC (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data));
typedef void (APIENTRY PFNGLCLIENTATTRIBDEFAULTEXT_PROC (GLbitfield mask));
typedef void (APIENTRY PFNGLCOMPRESSEDMULTITEXIMAGE1DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDMULTITEXIMAGE2DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDMULTITEXIMAGE3DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXTUREIMAGE1DEXT_PROC (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXTUREIMAGE2DEXT_PROC (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXTUREIMAGE3DEXT_PROC (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits));
typedef void (APIENTRY PFNGLCOPYMULTITEXIMAGE1DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border));
typedef void (APIENTRY PFNGLCOPYMULTITEXIMAGE2DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border));
typedef void (APIENTRY PFNGLCOPYMULTITEXSUBIMAGE1DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width));
typedef void (APIENTRY PFNGLCOPYMULTITEXSUBIMAGE2DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLCOPYMULTITEXSUBIMAGE3DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLCOPYTEXTUREIMAGE1DEXT_PROC (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border));
typedef void (APIENTRY PFNGLCOPYTEXTUREIMAGE2DEXT_PROC (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border));
typedef void (APIENTRY PFNGLCOPYTEXTURESUBIMAGE1DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width));
typedef void (APIENTRY PFNGLCOPYTEXTURESUBIMAGE2DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLCOPYTEXTURESUBIMAGE3DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLDISABLECLIENTSTATEINDEXEDEXT_PROC (GLenum array, GLuint index));
typedef void (APIENTRY PFNGLDISABLECLIENTSTATEIEXT_PROC (GLenum array, GLuint index));
typedef void (APIENTRY PFNGLDISABLEINDEXEDEXT_PROC (GLenum target, GLuint index));
typedef void (APIENTRY PFNGLDISABLEVERTEXARRAYATTRIBEXT_PROC (GLuint vaobj, GLuint index));
typedef void (APIENTRY PFNGLDISABLEVERTEXARRAYEXT_PROC (GLuint vaobj, GLenum array));
typedef void (APIENTRY PFNGLENABLECLIENTSTATEINDEXEDEXT_PROC (GLenum array, GLuint index));
typedef void (APIENTRY PFNGLENABLECLIENTSTATEIEXT_PROC (GLenum array, GLuint index));
typedef void (APIENTRY PFNGLENABLEINDEXEDEXT_PROC (GLenum target, GLuint index));
typedef void (APIENTRY PFNGLENABLEVERTEXARRAYATTRIBEXT_PROC (GLuint vaobj, GLuint index));
typedef void (APIENTRY PFNGLENABLEVERTEXARRAYEXT_PROC (GLuint vaobj, GLenum array));
typedef void (APIENTRY PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXT_PROC (GLuint buffer, GLintptr offset, GLsizeiptr length));
typedef void (APIENTRY PFNGLFRAMEBUFFERDRAWBUFFEREXT_PROC (GLuint framebuffer, GLenum mode));
typedef void (APIENTRY PFNGLFRAMEBUFFERDRAWBUFFERSEXT_PROC (GLuint framebuffer, GLsizei n, const GLenum * bufs));
typedef void (APIENTRY PFNGLFRAMEBUFFERREADBUFFEREXT_PROC (GLuint framebuffer, GLenum mode));
typedef void (APIENTRY PFNGLGENERATEMULTITEXMIPMAPEXT_PROC (GLenum texunit, GLenum target));
typedef void (APIENTRY PFNGLGENERATETEXTUREMIPMAPEXT_PROC (GLuint texture, GLenum target));
typedef void (APIENTRY PFNGLGETBOOLEANINDEXEDVEXT_PROC (GLenum target, GLuint index, GLboolean * data));
typedef void (APIENTRY PFNGLGETCOMPRESSEDMULTITEXIMAGEEXT_PROC (GLenum texunit, GLenum target, GLint lod, void * img));
typedef void (APIENTRY PFNGLGETCOMPRESSEDTEXTUREIMAGEEXT_PROC (GLuint texture, GLenum target, GLint lod, void * img));
typedef void (APIENTRY PFNGLGETDOUBLEINDEXEDVEXT_PROC (GLenum target, GLuint index, GLdouble * data));
typedef void (APIENTRY PFNGLGETDOUBLEI_VEXT_PROC (GLenum pname, GLuint index, GLdouble * params));
typedef void (APIENTRY PFNGLGETFLOATINDEXEDVEXT_PROC (GLenum target, GLuint index, GLfloat * data));
typedef void (APIENTRY PFNGLGETFLOATI_VEXT_PROC (GLenum pname, GLuint index, GLfloat * params));
typedef void (APIENTRY PFNGLGETFRAMEBUFFERPARAMETERIVEXT_PROC (GLuint framebuffer, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETINTEGERINDEXEDVEXT_PROC (GLenum target, GLuint index, GLint * data));
typedef void (APIENTRY PFNGLGETMULTITEXENVFVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETMULTITEXENVIVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETMULTITEXGENDVEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, GLdouble * params));
typedef void (APIENTRY PFNGLGETMULTITEXGENFVEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETMULTITEXGENIVEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETMULTITEXIMAGEEXT_PROC (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels));
typedef void (APIENTRY PFNGLGETMULTITEXLEVELPARAMETERFVEXT_PROC (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETMULTITEXLEVELPARAMETERIVEXT_PROC (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETMULTITEXPARAMETERIIVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETMULTITEXPARAMETERIUIVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLuint * params));
typedef void (APIENTRY PFNGLGETMULTITEXPARAMETERFVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETMULTITEXPARAMETERIVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETNAMEDBUFFERPARAMETERIVEXT_PROC (GLuint buffer, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETNAMEDBUFFERPOINTERVEXT_PROC (GLuint buffer, GLenum pname, void ** params));
typedef void (APIENTRY PFNGLGETNAMEDBUFFERSUBDATAEXT_PROC (GLuint buffer, GLintptr offset, GLsizeiptr size, void * data));
typedef void (APIENTRY PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXT_PROC (GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXT_PROC (GLuint framebuffer, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXT_PROC (GLuint program, GLenum target, GLuint index, GLint * params));
typedef void (APIENTRY PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXT_PROC (GLuint program, GLenum target, GLuint index, GLuint * params));
typedef void (APIENTRY PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXT_PROC (GLuint program, GLenum target, GLuint index, GLdouble * params));
typedef void (APIENTRY PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXT_PROC (GLuint program, GLenum target, GLuint index, GLfloat * params));
typedef void (APIENTRY PFNGLGETNAMEDPROGRAMSTRINGEXT_PROC (GLuint program, GLenum target, GLenum pname, void * string));
typedef void (APIENTRY PFNGLGETNAMEDPROGRAMIVEXT_PROC (GLuint program, GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXT_PROC (GLuint renderbuffer, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETPOINTERINDEXEDVEXT_PROC (GLenum target, GLuint index, void ** data));
typedef void (APIENTRY PFNGLGETPOINTERI_VEXT_PROC (GLenum pname, GLuint index, void ** params));
typedef void (APIENTRY PFNGLGETTEXTUREIMAGEEXT_PROC (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels));
typedef void (APIENTRY PFNGLGETTEXTURELEVELPARAMETERFVEXT_PROC (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETTEXTURELEVELPARAMETERIVEXT_PROC (GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETTEXTUREPARAMETERIIVEXT_PROC (GLuint texture, GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETTEXTUREPARAMETERIUIVEXT_PROC (GLuint texture, GLenum target, GLenum pname, GLuint * params));
typedef void (APIENTRY PFNGLGETTEXTUREPARAMETERFVEXT_PROC (GLuint texture, GLenum target, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETTEXTUREPARAMETERIVEXT_PROC (GLuint texture, GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETVERTEXARRAYINTEGERI_VEXT_PROC (GLuint vaobj, GLuint index, GLenum pname, GLint * param));
typedef void (APIENTRY PFNGLGETVERTEXARRAYINTEGERVEXT_PROC (GLuint vaobj, GLenum pname, GLint * param));
typedef void (APIENTRY PFNGLGETVERTEXARRAYPOINTERI_VEXT_PROC (GLuint vaobj, GLuint index, GLenum pname, void ** param));
typedef void (APIENTRY PFNGLGETVERTEXARRAYPOINTERVEXT_PROC (GLuint vaobj, GLenum pname, void ** param));
typedef GLboolean (APIENTRY PFNGLISENABLEDINDEXEDEXT_PROC (GLenum target, GLuint index));
typedef void * (APIENTRY PFNGLMAPNAMEDBUFFEREXT_PROC (GLuint buffer, GLenum access));
typedef void * (APIENTRY PFNGLMAPNAMEDBUFFERRANGEEXT_PROC (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access));
typedef void (APIENTRY PFNGLMATRIXFRUSTUMEXT_PROC (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar));
typedef void (APIENTRY PFNGLMATRIXLOADIDENTITYEXT_PROC (GLenum mode));
typedef void (APIENTRY PFNGLMATRIXLOADTRANSPOSEDEXT_PROC (GLenum mode, const GLdouble * m));
typedef void (APIENTRY PFNGLMATRIXLOADTRANSPOSEFEXT_PROC (GLenum mode, const GLfloat * m));
typedef void (APIENTRY PFNGLMATRIXLOADDEXT_PROC (GLenum mode, const GLdouble * m));
typedef void (APIENTRY PFNGLMATRIXLOADFEXT_PROC (GLenum mode, const GLfloat * m));
typedef void (APIENTRY PFNGLMATRIXMULTTRANSPOSEDEXT_PROC (GLenum mode, const GLdouble * m));
typedef void (APIENTRY PFNGLMATRIXMULTTRANSPOSEFEXT_PROC (GLenum mode, const GLfloat * m));
typedef void (APIENTRY PFNGLMATRIXMULTDEXT_PROC (GLenum mode, const GLdouble * m));
typedef void (APIENTRY PFNGLMATRIXMULTFEXT_PROC (GLenum mode, const GLfloat * m));
typedef void (APIENTRY PFNGLMATRIXORTHOEXT_PROC (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar));
typedef void (APIENTRY PFNGLMATRIXPOPEXT_PROC (GLenum mode));
typedef void (APIENTRY PFNGLMATRIXPUSHEXT_PROC (GLenum mode));
typedef void (APIENTRY PFNGLMATRIXROTATEDEXT_PROC (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLMATRIXROTATEFEXT_PROC (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z));
typedef void (APIENTRY PFNGLMATRIXSCALEDEXT_PROC (GLenum mode, GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLMATRIXSCALEFEXT_PROC (GLenum mode, GLfloat x, GLfloat y, GLfloat z));
typedef void (APIENTRY PFNGLMATRIXTRANSLATEDEXT_PROC (GLenum mode, GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLMATRIXTRANSLATEFEXT_PROC (GLenum mode, GLfloat x, GLfloat y, GLfloat z));
typedef void (APIENTRY PFNGLMULTITEXBUFFEREXT_PROC (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer));
typedef void (APIENTRY PFNGLMULTITEXCOORDPOINTEREXT_PROC (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer));
typedef void (APIENTRY PFNGLMULTITEXENVFEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLfloat param));
typedef void (APIENTRY PFNGLMULTITEXENVFVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params));
typedef void (APIENTRY PFNGLMULTITEXENVIEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLint param));
typedef void (APIENTRY PFNGLMULTITEXENVIVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, const GLint * params));
typedef void (APIENTRY PFNGLMULTITEXGENDEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, GLdouble param));
typedef void (APIENTRY PFNGLMULTITEXGENDVEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params));
typedef void (APIENTRY PFNGLMULTITEXGENFEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, GLfloat param));
typedef void (APIENTRY PFNGLMULTITEXGENFVEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params));
typedef void (APIENTRY PFNGLMULTITEXGENIEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, GLint param));
typedef void (APIENTRY PFNGLMULTITEXGENIVEXT_PROC (GLenum texunit, GLenum coord, GLenum pname, const GLint * params));
typedef void (APIENTRY PFNGLMULTITEXIMAGE1DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLMULTITEXIMAGE2DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLMULTITEXIMAGE3DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLMULTITEXPARAMETERIIVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, const GLint * params));
typedef void (APIENTRY PFNGLMULTITEXPARAMETERIUIVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, const GLuint * params));
typedef void (APIENTRY PFNGLMULTITEXPARAMETERFEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLfloat param));
typedef void (APIENTRY PFNGLMULTITEXPARAMETERFVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, const GLfloat * params));
typedef void (APIENTRY PFNGLMULTITEXPARAMETERIEXT_PROC (GLenum texunit, GLenum target, GLenum pname, GLint param));
typedef void (APIENTRY PFNGLMULTITEXPARAMETERIVEXT_PROC (GLenum texunit, GLenum target, GLenum pname, const GLint * params));
typedef void (APIENTRY PFNGLMULTITEXRENDERBUFFEREXT_PROC (GLenum texunit, GLenum target, GLuint renderbuffer));
typedef void (APIENTRY PFNGLMULTITEXSUBIMAGE1DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLMULTITEXSUBIMAGE2DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLMULTITEXSUBIMAGE3DEXT_PROC (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLNAMEDBUFFERDATAEXT_PROC (GLuint buffer, GLsizeiptr size, const void * data, GLenum usage));
typedef void (APIENTRY PFNGLNAMEDBUFFERSTORAGEEXT_PROC (GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags));
typedef void (APIENTRY PFNGLNAMEDBUFFERSUBDATAEXT_PROC (GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data));
typedef void (APIENTRY PFNGLNAMEDCOPYBUFFERSUBDATAEXT_PROC (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size));
typedef void (APIENTRY PFNGLNAMEDFRAMEBUFFERPARAMETERIEXT_PROC (GLuint framebuffer, GLenum pname, GLint param));
typedef void (APIENTRY PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXT_PROC (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer));
typedef void (APIENTRY PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXT_PROC (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXT_PROC (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXT_PROC (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset));
typedef void (APIENTRY PFNGLNAMEDFRAMEBUFFERTEXTUREEXT_PROC (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXT_PROC (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face));
typedef void (APIENTRY PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXT_PROC (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXT_PROC (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXT_PROC (GLuint program, GLenum target, GLuint index, const GLdouble * params));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXT_PROC (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXT_PROC (GLuint program, GLenum target, GLuint index, const GLfloat * params));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXT_PROC (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXT_PROC (GLuint program, GLenum target, GLuint index, const GLint * params));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXT_PROC (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXT_PROC (GLuint program, GLenum target, GLuint index, const GLuint * params));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXT_PROC (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXT_PROC (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params));
typedef void (APIENTRY PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXT_PROC (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params));
typedef void (APIENTRY PFNGLNAMEDPROGRAMSTRINGEXT_PROC (GLuint program, GLenum target, GLenum format, GLsizei len, const void * string));
typedef void (APIENTRY PFNGLNAMEDRENDERBUFFERSTORAGEEXT_PROC (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXT_PROC (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXT_PROC (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1DEXT_PROC (GLuint program, GLint location, GLdouble x));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1DVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1FEXT_PROC (GLuint program, GLint location, GLfloat v0));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1FVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1IEXT_PROC (GLuint program, GLint location, GLint v0));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1IVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1UIEXT_PROC (GLuint program, GLint location, GLuint v0));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1UIVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2DEXT_PROC (GLuint program, GLint location, GLdouble x, GLdouble y));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2DVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2FEXT_PROC (GLuint program, GLint location, GLfloat v0, GLfloat v1));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2FVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2IEXT_PROC (GLuint program, GLint location, GLint v0, GLint v1));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2IVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2UIEXT_PROC (GLuint program, GLint location, GLuint v0, GLuint v1));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2UIVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3DEXT_PROC (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3DVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3FEXT_PROC (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3FVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3IEXT_PROC (GLuint program, GLint location, GLint v0, GLint v1, GLint v2));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3IVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3UIEXT_PROC (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3UIVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4DEXT_PROC (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4DVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4FEXT_PROC (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4FVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4IEXT_PROC (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4IVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4UIEXT_PROC (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4UIVEXT_PROC (GLuint program, GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2X3DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2X3FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2X4DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2X4FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3X2DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3X2FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3X4DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3X4FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4X2DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4X2FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4X3DVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4X3FVEXT_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPUSHCLIENTATTRIBDEFAULTEXT_PROC (GLbitfield mask));
typedef void (APIENTRY PFNGLTEXTUREBUFFEREXT_PROC (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer));
typedef void (APIENTRY PFNGLTEXTUREBUFFERRANGEEXT_PROC (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size));
typedef void (APIENTRY PFNGLTEXTUREIMAGE1DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLTEXTUREIMAGE2DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLTEXTUREIMAGE3DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLTEXTUREPAGECOMMITMENTEXT_PROC (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident));
typedef void (APIENTRY PFNGLTEXTUREPARAMETERIIVEXT_PROC (GLuint texture, GLenum target, GLenum pname, const GLint * params));
typedef void (APIENTRY PFNGLTEXTUREPARAMETERIUIVEXT_PROC (GLuint texture, GLenum target, GLenum pname, const GLuint * params));
typedef void (APIENTRY PFNGLTEXTUREPARAMETERFEXT_PROC (GLuint texture, GLenum target, GLenum pname, GLfloat param));
typedef void (APIENTRY PFNGLTEXTUREPARAMETERFVEXT_PROC (GLuint texture, GLenum target, GLenum pname, const GLfloat * params));
typedef void (APIENTRY PFNGLTEXTUREPARAMETERIEXT_PROC (GLuint texture, GLenum target, GLenum pname, GLint param));
typedef void (APIENTRY PFNGLTEXTUREPARAMETERIVEXT_PROC (GLuint texture, GLenum target, GLenum pname, const GLint * params));
typedef void (APIENTRY PFNGLTEXTURERENDERBUFFEREXT_PROC (GLuint texture, GLenum target, GLuint renderbuffer));
typedef void (APIENTRY PFNGLTEXTURESTORAGE1DEXT_PROC (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width));
typedef void (APIENTRY PFNGLTEXTURESTORAGE2DEXT_PROC (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLTEXTURESTORAGE2DMULTISAMPLEEXT_PROC (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations));
typedef void (APIENTRY PFNGLTEXTURESTORAGE3DEXT_PROC (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth));
typedef void (APIENTRY PFNGLTEXTURESTORAGE3DMULTISAMPLEEXT_PROC (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations));
typedef void (APIENTRY PFNGLTEXTURESUBIMAGE1DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLTEXTURESUBIMAGE2DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLTEXTURESUBIMAGE3DEXT_PROC (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels));
typedef GLboolean (APIENTRY PFNGLUNMAPNAMEDBUFFEREXT_PROC (GLuint buffer));
typedef void (APIENTRY PFNGLVERTEXARRAYBINDVERTEXBUFFEREXT_PROC (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride));
typedef void (APIENTRY PFNGLVERTEXARRAYCOLOROFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYEDGEFLAGOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYFOGCOORDOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYINDEXOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYNORMALOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYTEXCOORDOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXT_PROC (GLuint vaobj, GLuint attribindex, GLuint bindingindex));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXT_PROC (GLuint vaobj, GLuint index, GLuint divisor));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXT_PROC (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXT_PROC (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXT_PROC (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXT_PROC (GLuint vaobj, GLuint bindingindex, GLuint divisor));
typedef void (APIENTRY PFNGLVERTEXARRAYVERTEXOFFSETEXT_PROC (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset));

/* GL_VERSION_1_0 */

GLAPI void APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);
GLAPI void APIENTRY glClear (GLbitfield mask);
GLAPI void APIENTRY glClearColor (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLAPI void APIENTRY glClearDepth (GLdouble depth);
GLAPI void APIENTRY glClearStencil (GLint s);
GLAPI void APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLAPI void APIENTRY glCullFace (GLenum mode);
GLAPI void APIENTRY glDepthFunc (GLenum func);
GLAPI void APIENTRY glDepthMask (GLboolean flag);
GLAPI void APIENTRY glDepthRange (GLdouble near, GLdouble far);
GLAPI void APIENTRY glDisable (GLenum cap);
GLAPI void APIENTRY glDrawBuffer (GLenum buf);
GLAPI void APIENTRY glEnable (GLenum cap);
GLAPI void APIENTRY glFinish (void);
GLAPI void APIENTRY glFlush (void);
GLAPI void APIENTRY glFrontFace (GLenum mode);
GLAPI void APIENTRY glGetBooleanv (GLenum pname, GLboolean * data);
GLAPI void APIENTRY glGetDoublev (GLenum pname, GLdouble * data);
GLAPI GLenum APIENTRY glGetError (void);
GLAPI void APIENTRY glGetFloatv (GLenum pname, GLfloat * data);
GLAPI void APIENTRY glGetIntegerv (GLenum pname, GLint * data);
GLAPI const GLubyte * APIENTRY glGetString (GLenum name);
GLAPI void APIENTRY glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLAPI void APIENTRY glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat * params);
GLAPI void APIENTRY glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint * params);
GLAPI void APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat * params);
GLAPI void APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint * params);
GLAPI void APIENTRY glHint (GLenum target, GLenum mode);
GLAPI GLboolean APIENTRY glIsEnabled (GLenum cap);
GLAPI void APIENTRY glLineWidth (GLfloat width);
GLAPI void APIENTRY glLogicOp (GLenum opcode);
GLAPI void APIENTRY glPixelStoref (GLenum pname, GLfloat param);
GLAPI void APIENTRY glPixelStorei (GLenum pname, GLint param);
GLAPI void APIENTRY glPointSize (GLfloat size);
GLAPI void APIENTRY glPolygonMode (GLenum face, GLenum mode);
GLAPI void APIENTRY glReadBuffer (GLenum src);
GLAPI void APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLAPI void APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);
GLAPI void APIENTRY glStencilMask (GLuint mask);
GLAPI void APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
GLAPI void APIENTRY glTexImage1D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLAPI void APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLAPI void APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);
GLAPI void APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat * params);
GLAPI void APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);
GLAPI void APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint * params);
GLAPI void APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);

/* GL_VERSION_1_1 */

GLAPI void APIENTRY glBindTexture (GLenum target, GLuint texture);
GLAPI void APIENTRY glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLAPI void APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLAPI void APIENTRY glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLAPI void APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLAPI void APIENTRY glDeleteTextures (GLsizei n, const GLuint * textures);
GLAPI void APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);
GLAPI void APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const void * indices);
GLAPI void APIENTRY glGenTextures (GLsizei n, GLuint * textures);
GLAPI GLboolean APIENTRY glIsTexture (GLuint texture);
GLAPI void APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);
GLAPI void APIENTRY glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLAPI void APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);

/* GL_VERSION_1_2 */

typedef void (APIENTRY PFNGLCOPYTEXSUBIMAGE3D_PROC (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLDRAWRANGEELEMENTS_PROC (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices));
typedef void (APIENTRY PFNGLTEXIMAGE3D_PROC (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels));
typedef void (APIENTRY PFNGLTEXSUBIMAGE3D_PROC (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels));

/* GL_VERSION_1_3 */

typedef void (APIENTRY PFNGLACTIVETEXTURE_PROC (GLenum texture));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXIMAGE1D_PROC (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXIMAGE2D_PROC (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXIMAGE3D_PROC (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXSUBIMAGE1D_PROC (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXSUBIMAGE2D_PROC (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLCOMPRESSEDTEXSUBIMAGE3D_PROC (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data));
typedef void (APIENTRY PFNGLGETCOMPRESSEDTEXIMAGE_PROC (GLenum target, GLint level, void * img));
typedef void (APIENTRY PFNGLSAMPLECOVERAGE_PROC (GLfloat value, GLboolean invert));

/* GL_VERSION_1_4 */

typedef void (APIENTRY PFNGLBLENDCOLOR_PROC (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha));
typedef void (APIENTRY PFNGLBLENDEQUATION_PROC (GLenum mode));
typedef void (APIENTRY PFNGLBLENDFUNCSEPARATE_PROC (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha));
typedef void (APIENTRY PFNGLMULTIDRAWARRAYS_PROC (GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount));
typedef void (APIENTRY PFNGLMULTIDRAWELEMENTS_PROC (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount));
typedef void (APIENTRY PFNGLPOINTPARAMETERF_PROC (GLenum pname, GLfloat param));
typedef void (APIENTRY PFNGLPOINTPARAMETERFV_PROC (GLenum pname, const GLfloat * params));
typedef void (APIENTRY PFNGLPOINTPARAMETERI_PROC (GLenum pname, GLint param));
typedef void (APIENTRY PFNGLPOINTPARAMETERIV_PROC (GLenum pname, const GLint * params));

/* GL_VERSION_1_5 */

typedef void (APIENTRY PFNGLBEGINQUERY_PROC (GLenum target, GLuint id));
typedef void (APIENTRY PFNGLBINDBUFFER_PROC (GLenum target, GLuint buffer));
typedef void (APIENTRY PFNGLBUFFERDATA_PROC (GLenum target, GLsizeiptr size, const void * data, GLenum usage));
typedef void (APIENTRY PFNGLBUFFERSUBDATA_PROC (GLenum target, GLintptr offset, GLsizeiptr size, const void * data));
typedef void (APIENTRY PFNGLDELETEBUFFERS_PROC (GLsizei n, const GLuint * buffers));
typedef void (APIENTRY PFNGLDELETEQUERIES_PROC (GLsizei n, const GLuint * ids));
typedef void (APIENTRY PFNGLENDQUERY_PROC (GLenum target));
typedef void (APIENTRY PFNGLGENBUFFERS_PROC (GLsizei n, GLuint * buffers));
typedef void (APIENTRY PFNGLGENQUERIES_PROC (GLsizei n, GLuint * ids));
typedef void (APIENTRY PFNGLGETBUFFERPARAMETERIV_PROC (GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETBUFFERPOINTERV_PROC (GLenum target, GLenum pname, void ** params));
typedef void (APIENTRY PFNGLGETBUFFERSUBDATA_PROC (GLenum target, GLintptr offset, GLsizeiptr size, void * data));
typedef void (APIENTRY PFNGLGETQUERYOBJECTIV_PROC (GLuint id, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETQUERYOBJECTUIV_PROC (GLuint id, GLenum pname, GLuint * params));
typedef void (APIENTRY PFNGLGETQUERYIV_PROC (GLenum target, GLenum pname, GLint * params));
typedef GLboolean (APIENTRY PFNGLISBUFFER_PROC (GLuint buffer));
typedef GLboolean (APIENTRY PFNGLISQUERY_PROC (GLuint id));
typedef void * (APIENTRY PFNGLMAPBUFFER_PROC (GLenum target, GLenum access));
typedef GLboolean (APIENTRY PFNGLUNMAPBUFFER_PROC (GLenum target));

/* GL_VERSION_2_0 */

typedef void (APIENTRY PFNGLATTACHSHADER_PROC (GLuint program, GLuint shader));
typedef void (APIENTRY PFNGLBINDATTRIBLOCATION_PROC (GLuint program, GLuint index, const GLchar * name));
typedef void (APIENTRY PFNGLBLENDEQUATIONSEPARATE_PROC (GLenum modeRGB, GLenum modeAlpha));
typedef void (APIENTRY PFNGLCOMPILESHADER_PROC (GLuint shader));
typedef GLuint (APIENTRY PFNGLCREATEPROGRAM_PROC (void));
typedef GLuint (APIENTRY PFNGLCREATESHADER_PROC (GLenum type));
typedef void (APIENTRY PFNGLDELETEPROGRAM_PROC (GLuint program));
typedef void (APIENTRY PFNGLDELETESHADER_PROC (GLuint shader));
typedef void (APIENTRY PFNGLDETACHSHADER_PROC (GLuint program, GLuint shader));
typedef void (APIENTRY PFNGLDISABLEVERTEXATTRIBARRAY_PROC (GLuint index));
typedef void (APIENTRY PFNGLDRAWBUFFERS_PROC (GLsizei n, const GLenum * bufs));
typedef void (APIENTRY PFNGLENABLEVERTEXATTRIBARRAY_PROC (GLuint index));
typedef void (APIENTRY PFNGLGETACTIVEATTRIB_PROC (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name));
typedef void (APIENTRY PFNGLGETACTIVEUNIFORM_PROC (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name));
typedef void (APIENTRY PFNGLGETATTACHEDSHADERS_PROC (GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders));
typedef GLint (APIENTRY PFNGLGETATTRIBLOCATION_PROC (GLuint program, const GLchar * name));
typedef void (APIENTRY PFNGLGETPROGRAMINFOLOG_PROC (GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog));
typedef void (APIENTRY PFNGLGETPROGRAMIV_PROC (GLuint program, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETSHADERINFOLOG_PROC (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog));
typedef void (APIENTRY PFNGLGETSHADERSOURCE_PROC (GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source));
typedef void (APIENTRY PFNGLGETSHADERIV_PROC (GLuint shader, GLenum pname, GLint * params));
typedef GLint (APIENTRY PFNGLGETUNIFORMLOCATION_PROC (GLuint program, const GLchar * name));
typedef void (APIENTRY PFNGLGETUNIFORMFV_PROC (GLuint program, GLint location, GLfloat * params));
typedef void (APIENTRY PFNGLGETUNIFORMIV_PROC (GLuint program, GLint location, GLint * params));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBPOINTERV_PROC (GLuint index, GLenum pname, void ** pointer));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBDV_PROC (GLuint index, GLenum pname, GLdouble * params));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBFV_PROC (GLuint index, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBIV_PROC (GLuint index, GLenum pname, GLint * params));
typedef GLboolean (APIENTRY PFNGLISPROGRAM_PROC (GLuint program));
typedef GLboolean (APIENTRY PFNGLISSHADER_PROC (GLuint shader));
typedef void (APIENTRY PFNGLLINKPROGRAM_PROC (GLuint program));
typedef void (APIENTRY PFNGLSHADERSOURCE_PROC (GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length));
typedef void (APIENTRY PFNGLSTENCILFUNCSEPARATE_PROC (GLenum face, GLenum func, GLint ref, GLuint mask));
typedef void (APIENTRY PFNGLSTENCILMASKSEPARATE_PROC (GLenum face, GLuint mask));
typedef void (APIENTRY PFNGLSTENCILOPSEPARATE_PROC (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass));
typedef void (APIENTRY PFNGLUNIFORM1F_PROC (GLint location, GLfloat v0));
typedef void (APIENTRY PFNGLUNIFORM1FV_PROC (GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORM1I_PROC (GLint location, GLint v0));
typedef void (APIENTRY PFNGLUNIFORM1IV_PROC (GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLUNIFORM2F_PROC (GLint location, GLfloat v0, GLfloat v1));
typedef void (APIENTRY PFNGLUNIFORM2FV_PROC (GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORM2I_PROC (GLint location, GLint v0, GLint v1));
typedef void (APIENTRY PFNGLUNIFORM2IV_PROC (GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLUNIFORM3F_PROC (GLint location, GLfloat v0, GLfloat v1, GLfloat v2));
typedef void (APIENTRY PFNGLUNIFORM3FV_PROC (GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORM3I_PROC (GLint location, GLint v0, GLint v1, GLint v2));
typedef void (APIENTRY PFNGLUNIFORM3IV_PROC (GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLUNIFORM4F_PROC (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3));
typedef void (APIENTRY PFNGLUNIFORM4FV_PROC (GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORM4I_PROC (GLint location, GLint v0, GLint v1, GLint v2, GLint v3));
typedef void (APIENTRY PFNGLUNIFORM4IV_PROC (GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX2FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX3FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX4FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUSEPROGRAM_PROC (GLuint program));
typedef void (APIENTRY PFNGLVALIDATEPROGRAM_PROC (GLuint program));
typedef void (APIENTRY PFNGLVERTEXATTRIB1D_PROC (GLuint index, GLdouble x));
typedef void (APIENTRY PFNGLVERTEXATTRIB1DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB1F_PROC (GLuint index, GLfloat x));
typedef void (APIENTRY PFNGLVERTEXATTRIB1FV_PROC (GLuint index, const GLfloat * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB1S_PROC (GLuint index, GLshort x));
typedef void (APIENTRY PFNGLVERTEXATTRIB1SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB2D_PROC (GLuint index, GLdouble x, GLdouble y));
typedef void (APIENTRY PFNGLVERTEXATTRIB2DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB2F_PROC (GLuint index, GLfloat x, GLfloat y));
typedef void (APIENTRY PFNGLVERTEXATTRIB2FV_PROC (GLuint index, const GLfloat * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB2S_PROC (GLuint index, GLshort x, GLshort y));
typedef void (APIENTRY PFNGLVERTEXATTRIB2SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB3D_PROC (GLuint index, GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLVERTEXATTRIB3DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB3F_PROC (GLuint index, GLfloat x, GLfloat y, GLfloat z));
typedef void (APIENTRY PFNGLVERTEXATTRIB3FV_PROC (GLuint index, const GLfloat * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB3S_PROC (GLuint index, GLshort x, GLshort y, GLshort z));
typedef void (APIENTRY PFNGLVERTEXATTRIB3SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NBV_PROC (GLuint index, const GLbyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NIV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NSV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NUB_PROC (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NUBV_PROC (GLuint index, const GLubyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NUIV_PROC (GLuint index, const GLuint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4NUSV_PROC (GLuint index, const GLushort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4BV_PROC (GLuint index, const GLbyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4D_PROC (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w));
typedef void (APIENTRY PFNGLVERTEXATTRIB4DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4F_PROC (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w));
typedef void (APIENTRY PFNGLVERTEXATTRIB4FV_PROC (GLuint index, const GLfloat * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4IV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4S_PROC (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w));
typedef void (APIENTRY PFNGLVERTEXATTRIB4SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4UBV_PROC (GLuint index, const GLubyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4UIV_PROC (GLuint index, const GLuint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIB4USV_PROC (GLuint index, const GLushort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBPOINTER_PROC (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer));

/* GL_VERSION_2_1 */

typedef void (APIENTRY PFNGLUNIFORMMATRIX2X3FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX2X4FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX3X2FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX3X4FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX4X2FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX4X3FV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));

/* GL_VERSION_3_0 */

typedef void (APIENTRY PFNGLBEGINCONDITIONALRENDER_PROC (GLuint id, GLenum mode));
typedef void (APIENTRY PFNGLBEGINTRANSFORMFEEDBACK_PROC (GLenum primitiveMode));
typedef void (APIENTRY PFNGLBINDBUFFERBASE_PROC (GLenum target, GLuint index, GLuint buffer));
typedef void (APIENTRY PFNGLBINDBUFFERRANGE_PROC (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size));
typedef void (APIENTRY PFNGLBINDFRAGDATALOCATION_PROC (GLuint program, GLuint color, const GLchar * name));
typedef void (APIENTRY PFNGLBINDFRAMEBUFFER_PROC (GLenum target, GLuint framebuffer));
typedef void (APIENTRY PFNGLBINDRENDERBUFFER_PROC (GLenum target, GLuint renderbuffer));
typedef void (APIENTRY PFNGLBINDVERTEXARRAY_PROC (GLuint array));
typedef void (APIENTRY PFNGLBLITFRAMEBUFFER_PROC (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter));
typedef GLenum (APIENTRY PFNGLCHECKFRAMEBUFFERSTATUS_PROC (GLenum target));
typedef void (APIENTRY PFNGLCLAMPCOLOR_PROC (GLenum target, GLenum clamp));
typedef void (APIENTRY PFNGLCLEARBUFFERFI_PROC (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil));
typedef void (APIENTRY PFNGLCLEARBUFFERFV_PROC (GLenum buffer, GLint drawbuffer, const GLfloat * value));
typedef void (APIENTRY PFNGLCLEARBUFFERIV_PROC (GLenum buffer, GLint drawbuffer, const GLint * value));
typedef void (APIENTRY PFNGLCLEARBUFFERUIV_PROC (GLenum buffer, GLint drawbuffer, const GLuint * value));
typedef void (APIENTRY PFNGLCOLORMASKI_PROC (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a));
typedef void (APIENTRY PFNGLDELETEFRAMEBUFFERS_PROC (GLsizei n, const GLuint * framebuffers));
typedef void (APIENTRY PFNGLDELETERENDERBUFFERS_PROC (GLsizei n, const GLuint * renderbuffers));
typedef void (APIENTRY PFNGLDELETEVERTEXARRAYS_PROC (GLsizei n, const GLuint * arrays));
typedef void (APIENTRY PFNGLDISABLEI_PROC (GLenum target, GLuint index));
typedef void (APIENTRY PFNGLENABLEI_PROC (GLenum target, GLuint index));
typedef void (APIENTRY PFNGLENDCONDITIONALRENDER_PROC (void));
typedef void (APIENTRY PFNGLENDTRANSFORMFEEDBACK_PROC (void));
typedef void (APIENTRY PFNGLFLUSHMAPPEDBUFFERRANGE_PROC (GLenum target, GLintptr offset, GLsizeiptr length));
typedef void (APIENTRY PFNGLFRAMEBUFFERRENDERBUFFER_PROC (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURE1D_PROC (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURE2D_PROC (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURE3D_PROC (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURELAYER_PROC (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer));
typedef void (APIENTRY PFNGLGENFRAMEBUFFERS_PROC (GLsizei n, GLuint * framebuffers));
typedef void (APIENTRY PFNGLGENRENDERBUFFERS_PROC (GLsizei n, GLuint * renderbuffers));
typedef void (APIENTRY PFNGLGENVERTEXARRAYS_PROC (GLsizei n, GLuint * arrays));
typedef void (APIENTRY PFNGLGENERATEMIPMAP_PROC (GLenum target));
typedef void (APIENTRY PFNGLGETBOOLEANI_V_PROC (GLenum target, GLuint index, GLboolean * data));
typedef GLint (APIENTRY PFNGLGETFRAGDATALOCATION_PROC (GLuint program, const GLchar * name));
typedef void (APIENTRY PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIV_PROC (GLenum target, GLenum attachment, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETINTEGERI_V_PROC (GLenum target, GLuint index, GLint * data));
typedef void (APIENTRY PFNGLGETRENDERBUFFERPARAMETERIV_PROC (GLenum target, GLenum pname, GLint * params));
typedef const GLubyte * (APIENTRY PFNGLGETSTRINGI_PROC (GLenum name, GLuint index));
typedef void (APIENTRY PFNGLGETTEXPARAMETERIIV_PROC (GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETTEXPARAMETERIUIV_PROC (GLenum target, GLenum pname, GLuint * params));
typedef void (APIENTRY PFNGLGETTRANSFORMFEEDBACKVARYING_PROC (GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name));
typedef void (APIENTRY PFNGLGETUNIFORMUIV_PROC (GLuint program, GLint location, GLuint * params));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBIIV_PROC (GLuint index, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBIUIV_PROC (GLuint index, GLenum pname, GLuint * params));
typedef GLboolean (APIENTRY PFNGLISENABLEDI_PROC (GLenum target, GLuint index));
typedef GLboolean (APIENTRY PFNGLISFRAMEBUFFER_PROC (GLuint framebuffer));
typedef GLboolean (APIENTRY PFNGLISRENDERBUFFER_PROC (GLuint renderbuffer));
typedef GLboolean (APIENTRY PFNGLISVERTEXARRAY_PROC (GLuint array));
typedef void * (APIENTRY PFNGLMAPBUFFERRANGE_PROC (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access));
typedef void (APIENTRY PFNGLRENDERBUFFERSTORAGE_PROC (GLenum target, GLenum internalformat, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLRENDERBUFFERSTORAGEMULTISAMPLE_PROC (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLTEXPARAMETERIIV_PROC (GLenum target, GLenum pname, const GLint * params));
typedef void (APIENTRY PFNGLTEXPARAMETERIUIV_PROC (GLenum target, GLenum pname, const GLuint * params));
typedef void (APIENTRY PFNGLTRANSFORMFEEDBACKVARYINGS_PROC (GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode));
typedef void (APIENTRY PFNGLUNIFORM1UI_PROC (GLint location, GLuint v0));
typedef void (APIENTRY PFNGLUNIFORM1UIV_PROC (GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLUNIFORM2UI_PROC (GLint location, GLuint v0, GLuint v1));
typedef void (APIENTRY PFNGLUNIFORM2UIV_PROC (GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLUNIFORM3UI_PROC (GLint location, GLuint v0, GLuint v1, GLuint v2));
typedef void (APIENTRY PFNGLUNIFORM3UIV_PROC (GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLUNIFORM4UI_PROC (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3));
typedef void (APIENTRY PFNGLUNIFORM4UIV_PROC (GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLVERTEXATTRIBI1I_PROC (GLuint index, GLint x));
typedef void (APIENTRY PFNGLVERTEXATTRIBI1IV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI1UI_PROC (GLuint index, GLuint x));
typedef void (APIENTRY PFNGLVERTEXATTRIBI1UIV_PROC (GLuint index, const GLuint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI2I_PROC (GLuint index, GLint x, GLint y));
typedef void (APIENTRY PFNGLVERTEXATTRIBI2IV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI2UI_PROC (GLuint index, GLuint x, GLuint y));
typedef void (APIENTRY PFNGLVERTEXATTRIBI2UIV_PROC (GLuint index, const GLuint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI3I_PROC (GLuint index, GLint x, GLint y, GLint z));
typedef void (APIENTRY PFNGLVERTEXATTRIBI3IV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI3UI_PROC (GLuint index, GLuint x, GLuint y, GLuint z));
typedef void (APIENTRY PFNGLVERTEXATTRIBI3UIV_PROC (GLuint index, const GLuint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI4BV_PROC (GLuint index, const GLbyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI4I_PROC (GLuint index, GLint x, GLint y, GLint z, GLint w));
typedef void (APIENTRY PFNGLVERTEXATTRIBI4IV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI4SV_PROC (GLuint index, const GLshort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI4UBV_PROC (GLuint index, const GLubyte * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI4UI_PROC (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w));
typedef void (APIENTRY PFNGLVERTEXATTRIBI4UIV_PROC (GLuint index, const GLuint * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBI4USV_PROC (GLuint index, const GLushort * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBIPOINTER_PROC (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer));

/* GL_VERSION_3_1 */

typedef void (APIENTRY PFNGLCOPYBUFFERSUBDATA_PROC (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size));
typedef void (APIENTRY PFNGLDRAWARRAYSINSTANCED_PROC (GLenum mode, GLint first, GLsizei count, GLsizei instancecount));
typedef void (APIENTRY PFNGLDRAWELEMENTSINSTANCED_PROC (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount));
typedef void (APIENTRY PFNGLGETACTIVEUNIFORMBLOCKNAME_PROC (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName));
typedef void (APIENTRY PFNGLGETACTIVEUNIFORMBLOCKIV_PROC (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETACTIVEUNIFORMNAME_PROC (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName));
typedef void (APIENTRY PFNGLGETACTIVEUNIFORMSIV_PROC (GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params));
typedef GLuint (APIENTRY PFNGLGETUNIFORMBLOCKINDEX_PROC (GLuint program, const GLchar * uniformBlockName));
typedef void (APIENTRY PFNGLGETUNIFORMINDICES_PROC (GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices));
typedef void (APIENTRY PFNGLPRIMITIVERESTARTINDEX_PROC (GLuint index));
typedef void (APIENTRY PFNGLTEXBUFFER_PROC (GLenum target, GLenum internalformat, GLuint buffer));
typedef void (APIENTRY PFNGLUNIFORMBLOCKBINDING_PROC (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding));

/* GL_VERSION_3_2 */

typedef GLenum (APIENTRY PFNGLCLIENTWAITSYNC_PROC (GLsync sync, GLbitfield flags, GLuint64 timeout));
typedef void (APIENTRY PFNGLDELETESYNC_PROC (GLsync sync));
typedef void (APIENTRY PFNGLDRAWELEMENTSBASEVERTEX_PROC (GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex));
typedef void (APIENTRY PFNGLDRAWELEMENTSINSTANCEDBASEVERTEX_PROC (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex));
typedef void (APIENTRY PFNGLDRAWRANGEELEMENTSBASEVERTEX_PROC (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex));
typedef GLsync (APIENTRY PFNGLFENCESYNC_PROC (GLenum condition, GLbitfield flags));
typedef void (APIENTRY PFNGLFRAMEBUFFERTEXTURE_PROC (GLenum target, GLenum attachment, GLuint texture, GLint level));
typedef void (APIENTRY PFNGLGETBUFFERPARAMETERI64V_PROC (GLenum target, GLenum pname, GLint64 * params));
typedef void (APIENTRY PFNGLGETINTEGER64I_V_PROC (GLenum target, GLuint index, GLint64 * data));
typedef void (APIENTRY PFNGLGETINTEGER64V_PROC (GLenum pname, GLint64 * data));
typedef void (APIENTRY PFNGLGETMULTISAMPLEFV_PROC (GLenum pname, GLuint index, GLfloat * val));
typedef void (APIENTRY PFNGLGETSYNCIV_PROC (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values));
typedef GLboolean (APIENTRY PFNGLISSYNC_PROC (GLsync sync));
typedef void (APIENTRY PFNGLMULTIDRAWELEMENTSBASEVERTEX_PROC (GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex));
typedef void (APIENTRY PFNGLPROVOKINGVERTEX_PROC (GLenum mode));
typedef void (APIENTRY PFNGLSAMPLEMASKI_PROC (GLuint maskNumber, GLbitfield mask));
typedef void (APIENTRY PFNGLTEXIMAGE2DMULTISAMPLE_PROC (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations));
typedef void (APIENTRY PFNGLTEXIMAGE3DMULTISAMPLE_PROC (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations));
typedef void (APIENTRY PFNGLWAITSYNC_PROC (GLsync sync, GLbitfield flags, GLuint64 timeout));

/* GL_VERSION_3_3 */

typedef void (APIENTRY PFNGLBINDFRAGDATALOCATIONINDEXED_PROC (GLuint program, GLuint colorNumber, GLuint index, const GLchar * name));
typedef void (APIENTRY PFNGLBINDSAMPLER_PROC (GLuint unit, GLuint sampler));
typedef void (APIENTRY PFNGLDELETESAMPLERS_PROC (GLsizei count, const GLuint * samplers));
typedef void (APIENTRY PFNGLGENSAMPLERS_PROC (GLsizei count, GLuint * samplers));
typedef GLint (APIENTRY PFNGLGETFRAGDATAINDEX_PROC (GLuint program, const GLchar * name));
typedef void (APIENTRY PFNGLGETQUERYOBJECTI64V_PROC (GLuint id, GLenum pname, GLint64 * params));
typedef void (APIENTRY PFNGLGETQUERYOBJECTUI64V_PROC (GLuint id, GLenum pname, GLuint64 * params));
typedef void (APIENTRY PFNGLGETSAMPLERPARAMETERIIV_PROC (GLuint sampler, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETSAMPLERPARAMETERIUIV_PROC (GLuint sampler, GLenum pname, GLuint * params));
typedef void (APIENTRY PFNGLGETSAMPLERPARAMETERFV_PROC (GLuint sampler, GLenum pname, GLfloat * params));
typedef void (APIENTRY PFNGLGETSAMPLERPARAMETERIV_PROC (GLuint sampler, GLenum pname, GLint * params));
typedef GLboolean (APIENTRY PFNGLISSAMPLER_PROC (GLuint sampler));
typedef void (APIENTRY PFNGLQUERYCOUNTER_PROC (GLuint id, GLenum target));
typedef void (APIENTRY PFNGLSAMPLERPARAMETERIIV_PROC (GLuint sampler, GLenum pname, const GLint * param));
typedef void (APIENTRY PFNGLSAMPLERPARAMETERIUIV_PROC (GLuint sampler, GLenum pname, const GLuint * param));
typedef void (APIENTRY PFNGLSAMPLERPARAMETERF_PROC (GLuint sampler, GLenum pname, GLfloat param));
typedef void (APIENTRY PFNGLSAMPLERPARAMETERFV_PROC (GLuint sampler, GLenum pname, const GLfloat * param));
typedef void (APIENTRY PFNGLSAMPLERPARAMETERI_PROC (GLuint sampler, GLenum pname, GLint param));
typedef void (APIENTRY PFNGLSAMPLERPARAMETERIV_PROC (GLuint sampler, GLenum pname, const GLint * param));
typedef void (APIENTRY PFNGLVERTEXATTRIBDIVISOR_PROC (GLuint index, GLuint divisor));
typedef void (APIENTRY PFNGLVERTEXATTRIBP1UI_PROC (GLuint index, GLenum type, GLboolean normalized, GLuint value));
typedef void (APIENTRY PFNGLVERTEXATTRIBP1UIV_PROC (GLuint index, GLenum type, GLboolean normalized, const GLuint * value));
typedef void (APIENTRY PFNGLVERTEXATTRIBP2UI_PROC (GLuint index, GLenum type, GLboolean normalized, GLuint value));
typedef void (APIENTRY PFNGLVERTEXATTRIBP2UIV_PROC (GLuint index, GLenum type, GLboolean normalized, const GLuint * value));
typedef void (APIENTRY PFNGLVERTEXATTRIBP3UI_PROC (GLuint index, GLenum type, GLboolean normalized, GLuint value));
typedef void (APIENTRY PFNGLVERTEXATTRIBP3UIV_PROC (GLuint index, GLenum type, GLboolean normalized, const GLuint * value));
typedef void (APIENTRY PFNGLVERTEXATTRIBP4UI_PROC (GLuint index, GLenum type, GLboolean normalized, GLuint value));
typedef void (APIENTRY PFNGLVERTEXATTRIBP4UIV_PROC (GLuint index, GLenum type, GLboolean normalized, const GLuint * value));

/* GL_VERSION_4_0 */

typedef void (APIENTRY PFNGLBEGINQUERYINDEXED_PROC (GLenum target, GLuint index, GLuint id));
typedef void (APIENTRY PFNGLBINDTRANSFORMFEEDBACK_PROC (GLenum target, GLuint id));
typedef void (APIENTRY PFNGLBLENDEQUATIONSEPARATEI_PROC (GLuint buf, GLenum modeRGB, GLenum modeAlpha));
typedef void (APIENTRY PFNGLBLENDEQUATIONI_PROC (GLuint buf, GLenum mode));
typedef void (APIENTRY PFNGLBLENDFUNCSEPARATEI_PROC (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha));
typedef void (APIENTRY PFNGLBLENDFUNCI_PROC (GLuint buf, GLenum src, GLenum dst));
typedef void (APIENTRY PFNGLDELETETRANSFORMFEEDBACKS_PROC (GLsizei n, const GLuint * ids));
typedef void (APIENTRY PFNGLDRAWARRAYSINDIRECT_PROC (GLenum mode, const void * indirect));
typedef void (APIENTRY PFNGLDRAWELEMENTSINDIRECT_PROC (GLenum mode, GLenum type, const void * indirect));
typedef void (APIENTRY PFNGLDRAWTRANSFORMFEEDBACK_PROC (GLenum mode, GLuint id));
typedef void (APIENTRY PFNGLDRAWTRANSFORMFEEDBACKSTREAM_PROC (GLenum mode, GLuint id, GLuint stream));
typedef void (APIENTRY PFNGLENDQUERYINDEXED_PROC (GLenum target, GLuint index));
typedef void (APIENTRY PFNGLGENTRANSFORMFEEDBACKS_PROC (GLsizei n, GLuint * ids));
typedef void (APIENTRY PFNGLGETACTIVESUBROUTINENAME_PROC (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name));
typedef void (APIENTRY PFNGLGETACTIVESUBROUTINEUNIFORMNAME_PROC (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name));
typedef void (APIENTRY PFNGLGETACTIVESUBROUTINEUNIFORMIV_PROC (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values));
typedef void (APIENTRY PFNGLGETPROGRAMSTAGEIV_PROC (GLuint program, GLenum shadertype, GLenum pname, GLint * values));
typedef void (APIENTRY PFNGLGETQUERYINDEXEDIV_PROC (GLenum target, GLuint index, GLenum pname, GLint * params));
typedef GLuint (APIENTRY PFNGLGETSUBROUTINEINDEX_PROC (GLuint program, GLenum shadertype, const GLchar * name));
typedef GLint (APIENTRY PFNGLGETSUBROUTINEUNIFORMLOCATION_PROC (GLuint program, GLenum shadertype, const GLchar * name));
typedef void (APIENTRY PFNGLGETUNIFORMSUBROUTINEUIV_PROC (GLenum shadertype, GLint location, GLuint * params));
typedef void (APIENTRY PFNGLGETUNIFORMDV_PROC (GLuint program, GLint location, GLdouble * params));
typedef GLboolean (APIENTRY PFNGLISTRANSFORMFEEDBACK_PROC (GLuint id));
typedef void (APIENTRY PFNGLMINSAMPLESHADING_PROC (GLfloat value));
typedef void (APIENTRY PFNGLPATCHPARAMETERFV_PROC (GLenum pname, const GLfloat * values));
typedef void (APIENTRY PFNGLPATCHPARAMETERI_PROC (GLenum pname, GLint value));
typedef void (APIENTRY PFNGLPAUSETRANSFORMFEEDBACK_PROC (void));
typedef void (APIENTRY PFNGLRESUMETRANSFORMFEEDBACK_PROC (void));
typedef void (APIENTRY PFNGLUNIFORM1D_PROC (GLint location, GLdouble x));
typedef void (APIENTRY PFNGLUNIFORM1DV_PROC (GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORM2D_PROC (GLint location, GLdouble x, GLdouble y));
typedef void (APIENTRY PFNGLUNIFORM2DV_PROC (GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORM3D_PROC (GLint location, GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLUNIFORM3DV_PROC (GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORM4D_PROC (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w));
typedef void (APIENTRY PFNGLUNIFORM4DV_PROC (GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX2DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX2X3DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX2X4DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX3DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX3X2DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX3X4DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX4DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX4X2DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMMATRIX4X3DV_PROC (GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLUNIFORMSUBROUTINESUIV_PROC (GLenum shadertype, GLsizei count, const GLuint * indices));

/* GL_VERSION_4_1 */

typedef void (APIENTRY PFNGLACTIVESHADERPROGRAM_PROC (GLuint pipeline, GLuint program));
typedef void (APIENTRY PFNGLBINDPROGRAMPIPELINE_PROC (GLuint pipeline));
typedef void (APIENTRY PFNGLCLEARDEPTHF_PROC (GLfloat d));
typedef GLuint (APIENTRY PFNGLCREATESHADERPROGRAMV_PROC (GLenum type, GLsizei count, const GLchar *const* strings));
typedef void (APIENTRY PFNGLDELETEPROGRAMPIPELINES_PROC (GLsizei n, const GLuint * pipelines));
typedef void (APIENTRY PFNGLDEPTHRANGEARRAYV_PROC (GLuint first, GLsizei count, const GLdouble * v));
typedef void (APIENTRY PFNGLDEPTHRANGEINDEXED_PROC (GLuint index, GLdouble n, GLdouble f));
typedef void (APIENTRY PFNGLDEPTHRANGEF_PROC (GLfloat n, GLfloat f));
typedef void (APIENTRY PFNGLGENPROGRAMPIPELINES_PROC (GLsizei n, GLuint * pipelines));
typedef void (APIENTRY PFNGLGETDOUBLEI_V_PROC (GLenum target, GLuint index, GLdouble * data));
typedef void (APIENTRY PFNGLGETFLOATI_V_PROC (GLenum target, GLuint index, GLfloat * data));
typedef void (APIENTRY PFNGLGETPROGRAMBINARY_PROC (GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary));
typedef void (APIENTRY PFNGLGETPROGRAMPIPELINEINFOLOG_PROC (GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog));
typedef void (APIENTRY PFNGLGETPROGRAMPIPELINEIV_PROC (GLuint pipeline, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETSHADERPRECISIONFORMAT_PROC (GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision));
typedef void (APIENTRY PFNGLGETVERTEXATTRIBLDV_PROC (GLuint index, GLenum pname, GLdouble * params));
typedef GLboolean (APIENTRY PFNGLISPROGRAMPIPELINE_PROC (GLuint pipeline));
typedef void (APIENTRY PFNGLPROGRAMBINARY_PROC (GLuint program, GLenum binaryFormat, const void * binary, GLsizei length));
typedef void (APIENTRY PFNGLPROGRAMPARAMETERI_PROC (GLuint program, GLenum pname, GLint value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1D_PROC (GLuint program, GLint location, GLdouble v0));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1DV_PROC (GLuint program, GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1F_PROC (GLuint program, GLint location, GLfloat v0));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1FV_PROC (GLuint program, GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1I_PROC (GLuint program, GLint location, GLint v0));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1IV_PROC (GLuint program, GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1UI_PROC (GLuint program, GLint location, GLuint v0));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM1UIV_PROC (GLuint program, GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2D_PROC (GLuint program, GLint location, GLdouble v0, GLdouble v1));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2DV_PROC (GLuint program, GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2F_PROC (GLuint program, GLint location, GLfloat v0, GLfloat v1));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2FV_PROC (GLuint program, GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2I_PROC (GLuint program, GLint location, GLint v0, GLint v1));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2IV_PROC (GLuint program, GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2UI_PROC (GLuint program, GLint location, GLuint v0, GLuint v1));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM2UIV_PROC (GLuint program, GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3D_PROC (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3DV_PROC (GLuint program, GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3F_PROC (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3FV_PROC (GLuint program, GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3I_PROC (GLuint program, GLint location, GLint v0, GLint v1, GLint v2));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3IV_PROC (GLuint program, GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3UI_PROC (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM3UIV_PROC (GLuint program, GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4D_PROC (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4DV_PROC (GLuint program, GLint location, GLsizei count, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4F_PROC (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4FV_PROC (GLuint program, GLint location, GLsizei count, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4I_PROC (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4IV_PROC (GLuint program, GLint location, GLsizei count, const GLint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4UI_PROC (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3));
typedef void (APIENTRY PFNGLPROGRAMUNIFORM4UIV_PROC (GLuint program, GLint location, GLsizei count, const GLuint * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2X3DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2X3FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2X4DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX2X4FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3X2DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3X2FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3X4DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX3X4FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4X2DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4X2FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4X3DV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value));
typedef void (APIENTRY PFNGLPROGRAMUNIFORMMATRIX4X3FV_PROC (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value));
typedef void (APIENTRY PFNGLRELEASESHADERCOMPILER_PROC (void));
typedef void (APIENTRY PFNGLSCISSORARRAYV_PROC (GLuint first, GLsizei count, const GLint * v));
typedef void (APIENTRY PFNGLSCISSORINDEXED_PROC (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLSCISSORINDEXEDV_PROC (GLuint index, const GLint * v));
typedef void (APIENTRY PFNGLSHADERBINARY_PROC (GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length));
typedef void (APIENTRY PFNGLUSEPROGRAMSTAGES_PROC (GLuint pipeline, GLbitfield stages, GLuint program));
typedef void (APIENTRY PFNGLVALIDATEPROGRAMPIPELINE_PROC (GLuint pipeline));
typedef void (APIENTRY PFNGLVERTEXATTRIBL1D_PROC (GLuint index, GLdouble x));
typedef void (APIENTRY PFNGLVERTEXATTRIBL1DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBL2D_PROC (GLuint index, GLdouble x, GLdouble y));
typedef void (APIENTRY PFNGLVERTEXATTRIBL2DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBL3D_PROC (GLuint index, GLdouble x, GLdouble y, GLdouble z));
typedef void (APIENTRY PFNGLVERTEXATTRIBL3DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBL4D_PROC (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w));
typedef void (APIENTRY PFNGLVERTEXATTRIBL4DV_PROC (GLuint index, const GLdouble * v));
typedef void (APIENTRY PFNGLVERTEXATTRIBLPOINTER_PROC (GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer));
typedef void (APIENTRY PFNGLVIEWPORTARRAYV_PROC (GLuint first, GLsizei count, const GLfloat * v));
typedef void (APIENTRY PFNGLVIEWPORTINDEXEDF_PROC (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h));
typedef void (APIENTRY PFNGLVIEWPORTINDEXEDFV_PROC (GLuint index, const GLfloat * v));

/* GL_VERSION_4_2 */

typedef void (APIENTRY PFNGLBINDIMAGETEXTURE_PROC (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format));
typedef void (APIENTRY PFNGLDRAWARRAYSINSTANCEDBASEINSTANCE_PROC (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance));
typedef void (APIENTRY PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCE_PROC (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance));
typedef void (APIENTRY PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCE_PROC (GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance));
typedef void (APIENTRY PFNGLDRAWTRANSFORMFEEDBACKINSTANCED_PROC (GLenum mode, GLuint id, GLsizei instancecount));
typedef void (APIENTRY PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCED_PROC (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount));
typedef void (APIENTRY PFNGLGETACTIVEATOMICCOUNTERBUFFERIV_PROC (GLuint program, GLuint bufferIndex, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETINTERNALFORMATIV_PROC (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params));
typedef void (APIENTRY PFNGLMEMORYBARRIER_PROC (GLbitfield barriers));
typedef void (APIENTRY PFNGLTEXSTORAGE1D_PROC (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width));
typedef void (APIENTRY PFNGLTEXSTORAGE2D_PROC (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLTEXSTORAGE3D_PROC (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth));

/* GL_VERSION_4_3 */

typedef void (APIENTRY PFNGLBINDVERTEXBUFFER_PROC (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride));
typedef void (APIENTRY PFNGLCLEARBUFFERDATA_PROC (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data));
typedef void (APIENTRY PFNGLCLEARBUFFERSUBDATA_PROC (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data));
typedef void (APIENTRY PFNGLCOPYIMAGESUBDATA_PROC (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth));
typedef void (APIENTRY PFNGLDEBUGMESSAGECALLBACK_PROC (GLDEBUGPROC callback, const void * userParam));
typedef void (APIENTRY PFNGLDEBUGMESSAGECONTROL_PROC (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled));
typedef void (APIENTRY PFNGLDEBUGMESSAGEINSERT_PROC (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf));
typedef void (APIENTRY PFNGLDISPATCHCOMPUTE_PROC (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z));
typedef void (APIENTRY PFNGLDISPATCHCOMPUTEINDIRECT_PROC (GLintptr indirect));
typedef void (APIENTRY PFNGLFRAMEBUFFERPARAMETERI_PROC (GLenum target, GLenum pname, GLint param));
typedef GLuint (APIENTRY PFNGLGETDEBUGMESSAGELOG_PROC (GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog));
typedef void (APIENTRY PFNGLGETFRAMEBUFFERPARAMETERIV_PROC (GLenum target, GLenum pname, GLint * params));
typedef void (APIENTRY PFNGLGETINTERNALFORMATI64V_PROC (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params));
typedef void (APIENTRY PFNGLGETOBJECTLABEL_PROC (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label));
typedef void (APIENTRY PFNGLGETOBJECTPTRLABEL_PROC (const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label));
typedef void (APIENTRY PFNGLGETPOINTERV_PROC (GLenum pname, void ** params));
typedef void (APIENTRY PFNGLGETPROGRAMINTERFACEIV_PROC (GLuint program, GLenum programInterface, GLenum pname, GLint * params));
typedef GLuint (APIENTRY PFNGLGETPROGRAMRESOURCEINDEX_PROC (GLuint program, GLenum programInterface, const GLchar * name));
typedef GLint (APIENTRY PFNGLGETPROGRAMRESOURCELOCATION_PROC (GLuint program, GLenum programInterface, const GLchar * name));
typedef GLint (APIENTRY PFNGLGETPROGRAMRESOURCELOCATIONINDEX_PROC (GLuint program, GLenum programInterface, const GLchar * name));
typedef void (APIENTRY PFNGLGETPROGRAMRESOURCENAME_PROC (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name));
typedef void (APIENTRY PFNGLGETPROGRAMRESOURCEIV_PROC (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params));
typedef void (APIENTRY PFNGLINVALIDATEBUFFERDATA_PROC (GLuint buffer));
typedef void (APIENTRY PFNGLINVALIDATEBUFFERSUBDATA_PROC (GLuint buffer, GLintptr offset, GLsizeiptr length));
typedef void (APIENTRY PFNGLINVALIDATEFRAMEBUFFER_PROC (GLenum target, GLsizei numAttachments, const GLenum * attachments));
typedef void (APIENTRY PFNGLINVALIDATESUBFRAMEBUFFER_PROC (GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height));
typedef void (APIENTRY PFNGLINVALIDATETEXIMAGE_PROC (GLuint texture, GLint level));
typedef void (APIENTRY PFNGLINVALIDATETEXSUBIMAGE_PROC (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth));
typedef void (APIENTRY PFNGLMULTIDRAWARRAYSINDIRECT_PROC (GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride));
typedef void (APIENTRY PFNGLMULTIDRAWELEMENTSINDIRECT_PROC (GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride));
typedef void (APIENTRY PFNGLOBJECTLABEL_PROC (GLenum identifier, GLuint name, GLsizei length, const GLchar * label));
typedef void (APIENTRY PFNGLOBJECTPTRLABEL_PROC (const void * ptr, GLsizei length, const GLchar * label));
typedef void (APIENTRY PFNGLPOPDEBUGGROUP_PROC (void));
typedef void (APIENTRY PFNGLPUSHDEBUGGROUP_PROC (GLenum source, GLuint id, GLsizei length, const GLchar * message));
typedef void (APIENTRY PFNGLSHADERSTORAGEBLOCKBINDING_PROC (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding));
typedef void (APIENTRY PFNGLTEXBUFFERRANGE_PROC (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size));
typedef void (APIENTRY PFNGLTEXSTORAGE2DMULTISAMPLE_PROC (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations));
typedef void (APIENTRY PFNGLTEXSTORAGE3DMULTISAMPLE_PROC (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations));
typedef void (APIENTRY PFNGLTEXTUREVIEW_PROC (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers));
typedef void (APIENTRY PFNGLVERTEXATTRIBBINDING_PROC (GLuint attribindex, GLuint bindingindex));
typedef void (APIENTRY PFNGLVERTEXATTRIBFORMAT_PROC (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset));
typedef void (APIENTRY PFNGLVERTEXATTRIBIFORMAT_PROC (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset));
typedef void (APIENTRY PFNGLVERTEXATTRIBLFORMAT_PROC (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset));
typedef void (APIENTRY PFNGLVERTEXBINDINGDIVISOR_PROC (GLuint bindingindex, GLuint divisor));

/* GL_VERSION_4_4 */

typedef void (APIENTRY PFNGLBINDBUFFERSBASE_PROC (GLenum target, GLuint first, GLsizei count, const GLuint * buffers));
typedef void (APIENTRY PFNGLBINDBUFFERSRANGE_PROC (GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes));
typedef void (APIENTRY PFNGLBINDIMAGETEXTURES_PROC (GLuint first, GLsizei count, const GLuint * textures));
typedef void (APIENTRY PFNGLBINDSAMPLERS_PROC (GLuint first, GLsizei count, const GLuint * samplers));
typedef void (APIENTRY PFNGLBINDTEXTURES_PROC (GLuint first, GLsizei count, const GLuint * textures));
typedef void (APIENTRY PFNGLBINDVERTEXBUFFERS_PROC (GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides));
typedef void (APIENTRY PFNGLBUFFERSTORAGE_PROC (GLenum target, GLsizeiptr size, const void * data, GLbitfield flags));
typedef void (APIENTRY PFNGLCLEARTEXIMAGE_PROC (GLuint texture, GLint level, GLenum format, GLenum type, const void * data));
typedef void (APIENTRY PFNGLCLEARTEXSUBIMAGE_PROC (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data));

typedef union {
    void* fp[737];
    struct {
        PFNGLBINDMULTITEXTUREEXT_PROC *BindMultiTextureEXT;
        PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXT_PROC *CheckNamedFramebufferStatusEXT;
        PFNGLCLEARNAMEDBUFFERDATAEXT_PROC *ClearNamedBufferDataEXT;
        PFNGLCLEARNAMEDBUFFERSUBDATAEXT_PROC *ClearNamedBufferSubDataEXT;
        PFNGLCLIENTATTRIBDEFAULTEXT_PROC *ClientAttribDefaultEXT;
        PFNGLCOMPRESSEDMULTITEXIMAGE1DEXT_PROC *CompressedMultiTexImage1DEXT;
        PFNGLCOMPRESSEDMULTITEXIMAGE2DEXT_PROC *CompressedMultiTexImage2DEXT;
        PFNGLCOMPRESSEDMULTITEXIMAGE3DEXT_PROC *CompressedMultiTexImage3DEXT;
        PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXT_PROC *CompressedMultiTexSubImage1DEXT;
        PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXT_PROC *CompressedMultiTexSubImage2DEXT;
        PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXT_PROC *CompressedMultiTexSubImage3DEXT;
        PFNGLCOMPRESSEDTEXTUREIMAGE1DEXT_PROC *CompressedTextureImage1DEXT;
        PFNGLCOMPRESSEDTEXTUREIMAGE2DEXT_PROC *CompressedTextureImage2DEXT;
        PFNGLCOMPRESSEDTEXTUREIMAGE3DEXT_PROC *CompressedTextureImage3DEXT;
        PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXT_PROC *CompressedTextureSubImage1DEXT;
        PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXT_PROC *CompressedTextureSubImage2DEXT;
        PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXT_PROC *CompressedTextureSubImage3DEXT;
        PFNGLCOPYMULTITEXIMAGE1DEXT_PROC *CopyMultiTexImage1DEXT;
        PFNGLCOPYMULTITEXIMAGE2DEXT_PROC *CopyMultiTexImage2DEXT;
        PFNGLCOPYMULTITEXSUBIMAGE1DEXT_PROC *CopyMultiTexSubImage1DEXT;
        PFNGLCOPYMULTITEXSUBIMAGE2DEXT_PROC *CopyMultiTexSubImage2DEXT;
        PFNGLCOPYMULTITEXSUBIMAGE3DEXT_PROC *CopyMultiTexSubImage3DEXT;
        PFNGLCOPYTEXTUREIMAGE1DEXT_PROC *CopyTextureImage1DEXT;
        PFNGLCOPYTEXTUREIMAGE2DEXT_PROC *CopyTextureImage2DEXT;
        PFNGLCOPYTEXTURESUBIMAGE1DEXT_PROC *CopyTextureSubImage1DEXT;
        PFNGLCOPYTEXTURESUBIMAGE2DEXT_PROC *CopyTextureSubImage2DEXT;
        PFNGLCOPYTEXTURESUBIMAGE3DEXT_PROC *CopyTextureSubImage3DEXT;
        PFNGLDISABLECLIENTSTATEINDEXEDEXT_PROC *DisableClientStateIndexedEXT;
        PFNGLDISABLECLIENTSTATEIEXT_PROC *DisableClientStateiEXT;
        PFNGLDISABLEINDEXEDEXT_PROC *DisableIndexedEXT;
        PFNGLDISABLEVERTEXARRAYATTRIBEXT_PROC *DisableVertexArrayAttribEXT;
        PFNGLDISABLEVERTEXARRAYEXT_PROC *DisableVertexArrayEXT;
        PFNGLENABLECLIENTSTATEINDEXEDEXT_PROC *EnableClientStateIndexedEXT;
        PFNGLENABLECLIENTSTATEIEXT_PROC *EnableClientStateiEXT;
        PFNGLENABLEINDEXEDEXT_PROC *EnableIndexedEXT;
        PFNGLENABLEVERTEXARRAYATTRIBEXT_PROC *EnableVertexArrayAttribEXT;
        PFNGLENABLEVERTEXARRAYEXT_PROC *EnableVertexArrayEXT;
        PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXT_PROC *FlushMappedNamedBufferRangeEXT;
        PFNGLFRAMEBUFFERDRAWBUFFEREXT_PROC *FramebufferDrawBufferEXT;
        PFNGLFRAMEBUFFERDRAWBUFFERSEXT_PROC *FramebufferDrawBuffersEXT;
        PFNGLFRAMEBUFFERREADBUFFEREXT_PROC *FramebufferReadBufferEXT;
        PFNGLGENERATEMULTITEXMIPMAPEXT_PROC *GenerateMultiTexMipmapEXT;
        PFNGLGENERATETEXTUREMIPMAPEXT_PROC *GenerateTextureMipmapEXT;
        PFNGLGETBOOLEANINDEXEDVEXT_PROC *GetBooleanIndexedvEXT;
        PFNGLGETCOMPRESSEDMULTITEXIMAGEEXT_PROC *GetCompressedMultiTexImageEXT;
        PFNGLGETCOMPRESSEDTEXTUREIMAGEEXT_PROC *GetCompressedTextureImageEXT;
        PFNGLGETDOUBLEINDEXEDVEXT_PROC *GetDoubleIndexedvEXT;
        PFNGLGETDOUBLEI_VEXT_PROC *GetDoublei_vEXT;
        PFNGLGETFLOATINDEXEDVEXT_PROC *GetFloatIndexedvEXT;
        PFNGLGETFLOATI_VEXT_PROC *GetFloati_vEXT;
        PFNGLGETFRAMEBUFFERPARAMETERIVEXT_PROC *GetFramebufferParameterivEXT;
        PFNGLGETINTEGERINDEXEDVEXT_PROC *GetIntegerIndexedvEXT;
        PFNGLGETMULTITEXENVFVEXT_PROC *GetMultiTexEnvfvEXT;
        PFNGLGETMULTITEXENVIVEXT_PROC *GetMultiTexEnvivEXT;
        PFNGLGETMULTITEXGENDVEXT_PROC *GetMultiTexGendvEXT;
        PFNGLGETMULTITEXGENFVEXT_PROC *GetMultiTexGenfvEXT;
        PFNGLGETMULTITEXGENIVEXT_PROC *GetMultiTexGenivEXT;
        PFNGLGETMULTITEXIMAGEEXT_PROC *GetMultiTexImageEXT;
        PFNGLGETMULTITEXLEVELPARAMETERFVEXT_PROC *GetMultiTexLevelParameterfvEXT;
        PFNGLGETMULTITEXLEVELPARAMETERIVEXT_PROC *GetMultiTexLevelParameterivEXT;
        PFNGLGETMULTITEXPARAMETERIIVEXT_PROC *GetMultiTexParameterIivEXT;
        PFNGLGETMULTITEXPARAMETERIUIVEXT_PROC *GetMultiTexParameterIuivEXT;
        PFNGLGETMULTITEXPARAMETERFVEXT_PROC *GetMultiTexParameterfvEXT;
        PFNGLGETMULTITEXPARAMETERIVEXT_PROC *GetMultiTexParameterivEXT;
        PFNGLGETNAMEDBUFFERPARAMETERIVEXT_PROC *GetNamedBufferParameterivEXT;
        PFNGLGETNAMEDBUFFERPOINTERVEXT_PROC *GetNamedBufferPointervEXT;
        PFNGLGETNAMEDBUFFERSUBDATAEXT_PROC *GetNamedBufferSubDataEXT;
        PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXT_PROC *GetNamedFramebufferAttachmentParameterivEXT;
        PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXT_PROC *GetNamedFramebufferParameterivEXT;
        PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXT_PROC *GetNamedProgramLocalParameterIivEXT;
        PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXT_PROC *GetNamedProgramLocalParameterIuivEXT;
        PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXT_PROC *GetNamedProgramLocalParameterdvEXT;
        PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXT_PROC *GetNamedProgramLocalParameterfvEXT;
        PFNGLGETNAMEDPROGRAMSTRINGEXT_PROC *GetNamedProgramStringEXT;
        PFNGLGETNAMEDPROGRAMIVEXT_PROC *GetNamedProgramivEXT;
        PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXT_PROC *GetNamedRenderbufferParameterivEXT;
        PFNGLGETPOINTERINDEXEDVEXT_PROC *GetPointerIndexedvEXT;
        PFNGLGETPOINTERI_VEXT_PROC *GetPointeri_vEXT;
        PFNGLGETTEXTUREIMAGEEXT_PROC *GetTextureImageEXT;
        PFNGLGETTEXTURELEVELPARAMETERFVEXT_PROC *GetTextureLevelParameterfvEXT;
        PFNGLGETTEXTURELEVELPARAMETERIVEXT_PROC *GetTextureLevelParameterivEXT;
        PFNGLGETTEXTUREPARAMETERIIVEXT_PROC *GetTextureParameterIivEXT;
        PFNGLGETTEXTUREPARAMETERIUIVEXT_PROC *GetTextureParameterIuivEXT;
        PFNGLGETTEXTUREPARAMETERFVEXT_PROC *GetTextureParameterfvEXT;
        PFNGLGETTEXTUREPARAMETERIVEXT_PROC *GetTextureParameterivEXT;
        PFNGLGETVERTEXARRAYINTEGERI_VEXT_PROC *GetVertexArrayIntegeri_vEXT;
        PFNGLGETVERTEXARRAYINTEGERVEXT_PROC *GetVertexArrayIntegervEXT;
        PFNGLGETVERTEXARRAYPOINTERI_VEXT_PROC *GetVertexArrayPointeri_vEXT;
        PFNGLGETVERTEXARRAYPOINTERVEXT_PROC *GetVertexArrayPointervEXT;
        PFNGLISENABLEDINDEXEDEXT_PROC *IsEnabledIndexedEXT;
        PFNGLMAPNAMEDBUFFEREXT_PROC *MapNamedBufferEXT;
        PFNGLMAPNAMEDBUFFERRANGEEXT_PROC *MapNamedBufferRangeEXT;
        PFNGLMATRIXFRUSTUMEXT_PROC *MatrixFrustumEXT;
        PFNGLMATRIXLOADIDENTITYEXT_PROC *MatrixLoadIdentityEXT;
        PFNGLMATRIXLOADTRANSPOSEDEXT_PROC *MatrixLoadTransposedEXT;
        PFNGLMATRIXLOADTRANSPOSEFEXT_PROC *MatrixLoadTransposefEXT;
        PFNGLMATRIXLOADDEXT_PROC *MatrixLoaddEXT;
        PFNGLMATRIXLOADFEXT_PROC *MatrixLoadfEXT;
        PFNGLMATRIXMULTTRANSPOSEDEXT_PROC *MatrixMultTransposedEXT;
        PFNGLMATRIXMULTTRANSPOSEFEXT_PROC *MatrixMultTransposefEXT;
        PFNGLMATRIXMULTDEXT_PROC *MatrixMultdEXT;
        PFNGLMATRIXMULTFEXT_PROC *MatrixMultfEXT;
        PFNGLMATRIXORTHOEXT_PROC *MatrixOrthoEXT;
        PFNGLMATRIXPOPEXT_PROC *MatrixPopEXT;
        PFNGLMATRIXPUSHEXT_PROC *MatrixPushEXT;
        PFNGLMATRIXROTATEDEXT_PROC *MatrixRotatedEXT;
        PFNGLMATRIXROTATEFEXT_PROC *MatrixRotatefEXT;
        PFNGLMATRIXSCALEDEXT_PROC *MatrixScaledEXT;
        PFNGLMATRIXSCALEFEXT_PROC *MatrixScalefEXT;
        PFNGLMATRIXTRANSLATEDEXT_PROC *MatrixTranslatedEXT;
        PFNGLMATRIXTRANSLATEFEXT_PROC *MatrixTranslatefEXT;
        PFNGLMULTITEXBUFFEREXT_PROC *MultiTexBufferEXT;
        PFNGLMULTITEXCOORDPOINTEREXT_PROC *MultiTexCoordPointerEXT;
        PFNGLMULTITEXENVFEXT_PROC *MultiTexEnvfEXT;
        PFNGLMULTITEXENVFVEXT_PROC *MultiTexEnvfvEXT;
        PFNGLMULTITEXENVIEXT_PROC *MultiTexEnviEXT;
        PFNGLMULTITEXENVIVEXT_PROC *MultiTexEnvivEXT;
        PFNGLMULTITEXGENDEXT_PROC *MultiTexGendEXT;
        PFNGLMULTITEXGENDVEXT_PROC *MultiTexGendvEXT;
        PFNGLMULTITEXGENFEXT_PROC *MultiTexGenfEXT;
        PFNGLMULTITEXGENFVEXT_PROC *MultiTexGenfvEXT;
        PFNGLMULTITEXGENIEXT_PROC *MultiTexGeniEXT;
        PFNGLMULTITEXGENIVEXT_PROC *MultiTexGenivEXT;
        PFNGLMULTITEXIMAGE1DEXT_PROC *MultiTexImage1DEXT;
        PFNGLMULTITEXIMAGE2DEXT_PROC *MultiTexImage2DEXT;
        PFNGLMULTITEXIMAGE3DEXT_PROC *MultiTexImage3DEXT;
        PFNGLMULTITEXPARAMETERIIVEXT_PROC *MultiTexParameterIivEXT;
        PFNGLMULTITEXPARAMETERIUIVEXT_PROC *MultiTexParameterIuivEXT;
        PFNGLMULTITEXPARAMETERFEXT_PROC *MultiTexParameterfEXT;
        PFNGLMULTITEXPARAMETERFVEXT_PROC *MultiTexParameterfvEXT;
        PFNGLMULTITEXPARAMETERIEXT_PROC *MultiTexParameteriEXT;
        PFNGLMULTITEXPARAMETERIVEXT_PROC *MultiTexParameterivEXT;
        PFNGLMULTITEXRENDERBUFFEREXT_PROC *MultiTexRenderbufferEXT;
        PFNGLMULTITEXSUBIMAGE1DEXT_PROC *MultiTexSubImage1DEXT;
        PFNGLMULTITEXSUBIMAGE2DEXT_PROC *MultiTexSubImage2DEXT;
        PFNGLMULTITEXSUBIMAGE3DEXT_PROC *MultiTexSubImage3DEXT;
        PFNGLNAMEDBUFFERDATAEXT_PROC *NamedBufferDataEXT;
        PFNGLNAMEDBUFFERSTORAGEEXT_PROC *NamedBufferStorageEXT;
        PFNGLNAMEDBUFFERSUBDATAEXT_PROC *NamedBufferSubDataEXT;
        PFNGLNAMEDCOPYBUFFERSUBDATAEXT_PROC *NamedCopyBufferSubDataEXT;
        PFNGLNAMEDFRAMEBUFFERPARAMETERIEXT_PROC *NamedFramebufferParameteriEXT;
        PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXT_PROC *NamedFramebufferRenderbufferEXT;
        PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXT_PROC *NamedFramebufferTexture1DEXT;
        PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXT_PROC *NamedFramebufferTexture2DEXT;
        PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXT_PROC *NamedFramebufferTexture3DEXT;
        PFNGLNAMEDFRAMEBUFFERTEXTUREEXT_PROC *NamedFramebufferTextureEXT;
        PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXT_PROC *NamedFramebufferTextureFaceEXT;
        PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXT_PROC *NamedFramebufferTextureLayerEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXT_PROC *NamedProgramLocalParameter4dEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXT_PROC *NamedProgramLocalParameter4dvEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXT_PROC *NamedProgramLocalParameter4fEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXT_PROC *NamedProgramLocalParameter4fvEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXT_PROC *NamedProgramLocalParameterI4iEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXT_PROC *NamedProgramLocalParameterI4ivEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXT_PROC *NamedProgramLocalParameterI4uiEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXT_PROC *NamedProgramLocalParameterI4uivEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXT_PROC *NamedProgramLocalParameters4fvEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXT_PROC *NamedProgramLocalParametersI4ivEXT;
        PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXT_PROC *NamedProgramLocalParametersI4uivEXT;
        PFNGLNAMEDPROGRAMSTRINGEXT_PROC *NamedProgramStringEXT;
        PFNGLNAMEDRENDERBUFFERSTORAGEEXT_PROC *NamedRenderbufferStorageEXT;
        PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXT_PROC *NamedRenderbufferStorageMultisampleCoverageEXT;
        PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXT_PROC *NamedRenderbufferStorageMultisampleEXT;
        PFNGLPROGRAMUNIFORM1DEXT_PROC *ProgramUniform1dEXT;
        PFNGLPROGRAMUNIFORM1DVEXT_PROC *ProgramUniform1dvEXT;
        PFNGLPROGRAMUNIFORM1FEXT_PROC *ProgramUniform1fEXT;
        PFNGLPROGRAMUNIFORM1FVEXT_PROC *ProgramUniform1fvEXT;
        PFNGLPROGRAMUNIFORM1IEXT_PROC *ProgramUniform1iEXT;
        PFNGLPROGRAMUNIFORM1IVEXT_PROC *ProgramUniform1ivEXT;
        PFNGLPROGRAMUNIFORM1UIEXT_PROC *ProgramUniform1uiEXT;
        PFNGLPROGRAMUNIFORM1UIVEXT_PROC *ProgramUniform1uivEXT;
        PFNGLPROGRAMUNIFORM2DEXT_PROC *ProgramUniform2dEXT;
        PFNGLPROGRAMUNIFORM2DVEXT_PROC *ProgramUniform2dvEXT;
        PFNGLPROGRAMUNIFORM2FEXT_PROC *ProgramUniform2fEXT;
        PFNGLPROGRAMUNIFORM2FVEXT_PROC *ProgramUniform2fvEXT;
        PFNGLPROGRAMUNIFORM2IEXT_PROC *ProgramUniform2iEXT;
        PFNGLPROGRAMUNIFORM2IVEXT_PROC *ProgramUniform2ivEXT;
        PFNGLPROGRAMUNIFORM2UIEXT_PROC *ProgramUniform2uiEXT;
        PFNGLPROGRAMUNIFORM2UIVEXT_PROC *ProgramUniform2uivEXT;
        PFNGLPROGRAMUNIFORM3DEXT_PROC *ProgramUniform3dEXT;
        PFNGLPROGRAMUNIFORM3DVEXT_PROC *ProgramUniform3dvEXT;
        PFNGLPROGRAMUNIFORM3FEXT_PROC *ProgramUniform3fEXT;
        PFNGLPROGRAMUNIFORM3FVEXT_PROC *ProgramUniform3fvEXT;
        PFNGLPROGRAMUNIFORM3IEXT_PROC *ProgramUniform3iEXT;
        PFNGLPROGRAMUNIFORM3IVEXT_PROC *ProgramUniform3ivEXT;
        PFNGLPROGRAMUNIFORM3UIEXT_PROC *ProgramUniform3uiEXT;
        PFNGLPROGRAMUNIFORM3UIVEXT_PROC *ProgramUniform3uivEXT;
        PFNGLPROGRAMUNIFORM4DEXT_PROC *ProgramUniform4dEXT;
        PFNGLPROGRAMUNIFORM4DVEXT_PROC *ProgramUniform4dvEXT;
        PFNGLPROGRAMUNIFORM4FEXT_PROC *ProgramUniform4fEXT;
        PFNGLPROGRAMUNIFORM4FVEXT_PROC *ProgramUniform4fvEXT;
        PFNGLPROGRAMUNIFORM4IEXT_PROC *ProgramUniform4iEXT;
        PFNGLPROGRAMUNIFORM4IVEXT_PROC *ProgramUniform4ivEXT;
        PFNGLPROGRAMUNIFORM4UIEXT_PROC *ProgramUniform4uiEXT;
        PFNGLPROGRAMUNIFORM4UIVEXT_PROC *ProgramUniform4uivEXT;
        PFNGLPROGRAMUNIFORMMATRIX2DVEXT_PROC *ProgramUniformMatrix2dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX2FVEXT_PROC *ProgramUniformMatrix2fvEXT;
        PFNGLPROGRAMUNIFORMMATRIX2X3DVEXT_PROC *ProgramUniformMatrix2x3dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX2X3FVEXT_PROC *ProgramUniformMatrix2x3fvEXT;
        PFNGLPROGRAMUNIFORMMATRIX2X4DVEXT_PROC *ProgramUniformMatrix2x4dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX2X4FVEXT_PROC *ProgramUniformMatrix2x4fvEXT;
        PFNGLPROGRAMUNIFORMMATRIX3DVEXT_PROC *ProgramUniformMatrix3dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX3FVEXT_PROC *ProgramUniformMatrix3fvEXT;
        PFNGLPROGRAMUNIFORMMATRIX3X2DVEXT_PROC *ProgramUniformMatrix3x2dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX3X2FVEXT_PROC *ProgramUniformMatrix3x2fvEXT;
        PFNGLPROGRAMUNIFORMMATRIX3X4DVEXT_PROC *ProgramUniformMatrix3x4dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX3X4FVEXT_PROC *ProgramUniformMatrix3x4fvEXT;
        PFNGLPROGRAMUNIFORMMATRIX4DVEXT_PROC *ProgramUniformMatrix4dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX4FVEXT_PROC *ProgramUniformMatrix4fvEXT;
        PFNGLPROGRAMUNIFORMMATRIX4X2DVEXT_PROC *ProgramUniformMatrix4x2dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX4X2FVEXT_PROC *ProgramUniformMatrix4x2fvEXT;
        PFNGLPROGRAMUNIFORMMATRIX4X3DVEXT_PROC *ProgramUniformMatrix4x3dvEXT;
        PFNGLPROGRAMUNIFORMMATRIX4X3FVEXT_PROC *ProgramUniformMatrix4x3fvEXT;
        PFNGLPUSHCLIENTATTRIBDEFAULTEXT_PROC *PushClientAttribDefaultEXT;
        PFNGLTEXTUREBUFFEREXT_PROC *TextureBufferEXT;
        PFNGLTEXTUREBUFFERRANGEEXT_PROC *TextureBufferRangeEXT;
        PFNGLTEXTUREIMAGE1DEXT_PROC *TextureImage1DEXT;
        PFNGLTEXTUREIMAGE2DEXT_PROC *TextureImage2DEXT;
        PFNGLTEXTUREIMAGE3DEXT_PROC *TextureImage3DEXT;
        PFNGLTEXTUREPAGECOMMITMENTEXT_PROC *TexturePageCommitmentEXT;
        PFNGLTEXTUREPARAMETERIIVEXT_PROC *TextureParameterIivEXT;
        PFNGLTEXTUREPARAMETERIUIVEXT_PROC *TextureParameterIuivEXT;
        PFNGLTEXTUREPARAMETERFEXT_PROC *TextureParameterfEXT;
        PFNGLTEXTUREPARAMETERFVEXT_PROC *TextureParameterfvEXT;
        PFNGLTEXTUREPARAMETERIEXT_PROC *TextureParameteriEXT;
        PFNGLTEXTUREPARAMETERIVEXT_PROC *TextureParameterivEXT;
        PFNGLTEXTURERENDERBUFFEREXT_PROC *TextureRenderbufferEXT;
        PFNGLTEXTURESTORAGE1DEXT_PROC *TextureStorage1DEXT;
        PFNGLTEXTURESTORAGE2DEXT_PROC *TextureStorage2DEXT;
        PFNGLTEXTURESTORAGE2DMULTISAMPLEEXT_PROC *TextureStorage2DMultisampleEXT;
        PFNGLTEXTURESTORAGE3DEXT_PROC *TextureStorage3DEXT;
        PFNGLTEXTURESTORAGE3DMULTISAMPLEEXT_PROC *TextureStorage3DMultisampleEXT;
        PFNGLTEXTURESUBIMAGE1DEXT_PROC *TextureSubImage1DEXT;
        PFNGLTEXTURESUBIMAGE2DEXT_PROC *TextureSubImage2DEXT;
        PFNGLTEXTURESUBIMAGE3DEXT_PROC *TextureSubImage3DEXT;
        PFNGLUNMAPNAMEDBUFFEREXT_PROC *UnmapNamedBufferEXT;
        PFNGLVERTEXARRAYBINDVERTEXBUFFEREXT_PROC *VertexArrayBindVertexBufferEXT;
        PFNGLVERTEXARRAYCOLOROFFSETEXT_PROC *VertexArrayColorOffsetEXT;
        PFNGLVERTEXARRAYEDGEFLAGOFFSETEXT_PROC *VertexArrayEdgeFlagOffsetEXT;
        PFNGLVERTEXARRAYFOGCOORDOFFSETEXT_PROC *VertexArrayFogCoordOffsetEXT;
        PFNGLVERTEXARRAYINDEXOFFSETEXT_PROC *VertexArrayIndexOffsetEXT;
        PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXT_PROC *VertexArrayMultiTexCoordOffsetEXT;
        PFNGLVERTEXARRAYNORMALOFFSETEXT_PROC *VertexArrayNormalOffsetEXT;
        PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXT_PROC *VertexArraySecondaryColorOffsetEXT;
        PFNGLVERTEXARRAYTEXCOORDOFFSETEXT_PROC *VertexArrayTexCoordOffsetEXT;
        PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXT_PROC *VertexArrayVertexAttribBindingEXT;
        PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXT_PROC *VertexArrayVertexAttribDivisorEXT;
        PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXT_PROC *VertexArrayVertexAttribFormatEXT;
        PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXT_PROC *VertexArrayVertexAttribIFormatEXT;
        PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXT_PROC *VertexArrayVertexAttribIOffsetEXT;
        PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXT_PROC *VertexArrayVertexAttribLFormatEXT;
        PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXT_PROC *VertexArrayVertexAttribLOffsetEXT;
        PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXT_PROC *VertexArrayVertexAttribOffsetEXT;
        PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXT_PROC *VertexArrayVertexBindingDivisorEXT;
        PFNGLVERTEXARRAYVERTEXOFFSETEXT_PROC *VertexArrayVertexOffsetEXT;
        PFNGLCOPYTEXSUBIMAGE3D_PROC *CopyTexSubImage3D;
        PFNGLDRAWRANGEELEMENTS_PROC *DrawRangeElements;
        PFNGLTEXIMAGE3D_PROC *TexImage3D;
        PFNGLTEXSUBIMAGE3D_PROC *TexSubImage3D;
        PFNGLACTIVETEXTURE_PROC *ActiveTexture;
        PFNGLCOMPRESSEDTEXIMAGE1D_PROC *CompressedTexImage1D;
        PFNGLCOMPRESSEDTEXIMAGE2D_PROC *CompressedTexImage2D;
        PFNGLCOMPRESSEDTEXIMAGE3D_PROC *CompressedTexImage3D;
        PFNGLCOMPRESSEDTEXSUBIMAGE1D_PROC *CompressedTexSubImage1D;
        PFNGLCOMPRESSEDTEXSUBIMAGE2D_PROC *CompressedTexSubImage2D;
        PFNGLCOMPRESSEDTEXSUBIMAGE3D_PROC *CompressedTexSubImage3D;
        PFNGLGETCOMPRESSEDTEXIMAGE_PROC *GetCompressedTexImage;
        PFNGLSAMPLECOVERAGE_PROC *SampleCoverage;
        PFNGLBLENDCOLOR_PROC *BlendColor;
        PFNGLBLENDEQUATION_PROC *BlendEquation;
        PFNGLBLENDFUNCSEPARATE_PROC *BlendFuncSeparate;
        PFNGLMULTIDRAWARRAYS_PROC *MultiDrawArrays;
        PFNGLMULTIDRAWELEMENTS_PROC *MultiDrawElements;
        PFNGLPOINTPARAMETERF_PROC *PointParameterf;
        PFNGLPOINTPARAMETERFV_PROC *PointParameterfv;
        PFNGLPOINTPARAMETERI_PROC *PointParameteri;
        PFNGLPOINTPARAMETERIV_PROC *PointParameteriv;
        PFNGLBEGINQUERY_PROC *BeginQuery;
        PFNGLBINDBUFFER_PROC *BindBuffer;
        PFNGLBUFFERDATA_PROC *BufferData;
        PFNGLBUFFERSUBDATA_PROC *BufferSubData;
        PFNGLDELETEBUFFERS_PROC *DeleteBuffers;
        PFNGLDELETEQUERIES_PROC *DeleteQueries;
        PFNGLENDQUERY_PROC *EndQuery;
        PFNGLGENBUFFERS_PROC *GenBuffers;
        PFNGLGENQUERIES_PROC *GenQueries;
        PFNGLGETBUFFERPARAMETERIV_PROC *GetBufferParameteriv;
        PFNGLGETBUFFERPOINTERV_PROC *GetBufferPointerv;
        PFNGLGETBUFFERSUBDATA_PROC *GetBufferSubData;
        PFNGLGETQUERYOBJECTIV_PROC *GetQueryObjectiv;
        PFNGLGETQUERYOBJECTUIV_PROC *GetQueryObjectuiv;
        PFNGLGETQUERYIV_PROC *GetQueryiv;
        PFNGLISBUFFER_PROC *IsBuffer;
        PFNGLISQUERY_PROC *IsQuery;
        PFNGLMAPBUFFER_PROC *MapBuffer;
        PFNGLUNMAPBUFFER_PROC *UnmapBuffer;
        PFNGLATTACHSHADER_PROC *AttachShader;
        PFNGLBINDATTRIBLOCATION_PROC *BindAttribLocation;
        PFNGLBLENDEQUATIONSEPARATE_PROC *BlendEquationSeparate;
        PFNGLCOMPILESHADER_PROC *CompileShader;
        PFNGLCREATEPROGRAM_PROC *CreateProgram;
        PFNGLCREATESHADER_PROC *CreateShader;
        PFNGLDELETEPROGRAM_PROC *DeleteProgram;
        PFNGLDELETESHADER_PROC *DeleteShader;
        PFNGLDETACHSHADER_PROC *DetachShader;
        PFNGLDISABLEVERTEXATTRIBARRAY_PROC *DisableVertexAttribArray;
        PFNGLDRAWBUFFERS_PROC *DrawBuffers;
        PFNGLENABLEVERTEXATTRIBARRAY_PROC *EnableVertexAttribArray;
        PFNGLGETACTIVEATTRIB_PROC *GetActiveAttrib;
        PFNGLGETACTIVEUNIFORM_PROC *GetActiveUniform;
        PFNGLGETATTACHEDSHADERS_PROC *GetAttachedShaders;
        PFNGLGETATTRIBLOCATION_PROC *GetAttribLocation;
        PFNGLGETPROGRAMINFOLOG_PROC *GetProgramInfoLog;
        PFNGLGETPROGRAMIV_PROC *GetProgramiv;
        PFNGLGETSHADERINFOLOG_PROC *GetShaderInfoLog;
        PFNGLGETSHADERSOURCE_PROC *GetShaderSource;
        PFNGLGETSHADERIV_PROC *GetShaderiv;
        PFNGLGETUNIFORMLOCATION_PROC *GetUniformLocation;
        PFNGLGETUNIFORMFV_PROC *GetUniformfv;
        PFNGLGETUNIFORMIV_PROC *GetUniformiv;
        PFNGLGETVERTEXATTRIBPOINTERV_PROC *GetVertexAttribPointerv;
        PFNGLGETVERTEXATTRIBDV_PROC *GetVertexAttribdv;
        PFNGLGETVERTEXATTRIBFV_PROC *GetVertexAttribfv;
        PFNGLGETVERTEXATTRIBIV_PROC *GetVertexAttribiv;
        PFNGLISPROGRAM_PROC *IsProgram;
        PFNGLISSHADER_PROC *IsShader;
        PFNGLLINKPROGRAM_PROC *LinkProgram;
        PFNGLSHADERSOURCE_PROC *ShaderSource;
        PFNGLSTENCILFUNCSEPARATE_PROC *StencilFuncSeparate;
        PFNGLSTENCILMASKSEPARATE_PROC *StencilMaskSeparate;
        PFNGLSTENCILOPSEPARATE_PROC *StencilOpSeparate;
        PFNGLUNIFORM1F_PROC *Uniform1f;
        PFNGLUNIFORM1FV_PROC *Uniform1fv;
        PFNGLUNIFORM1I_PROC *Uniform1i;
        PFNGLUNIFORM1IV_PROC *Uniform1iv;
        PFNGLUNIFORM2F_PROC *Uniform2f;
        PFNGLUNIFORM2FV_PROC *Uniform2fv;
        PFNGLUNIFORM2I_PROC *Uniform2i;
        PFNGLUNIFORM2IV_PROC *Uniform2iv;
        PFNGLUNIFORM3F_PROC *Uniform3f;
        PFNGLUNIFORM3FV_PROC *Uniform3fv;
        PFNGLUNIFORM3I_PROC *Uniform3i;
        PFNGLUNIFORM3IV_PROC *Uniform3iv;
        PFNGLUNIFORM4F_PROC *Uniform4f;
        PFNGLUNIFORM4FV_PROC *Uniform4fv;
        PFNGLUNIFORM4I_PROC *Uniform4i;
        PFNGLUNIFORM4IV_PROC *Uniform4iv;
        PFNGLUNIFORMMATRIX2FV_PROC *UniformMatrix2fv;
        PFNGLUNIFORMMATRIX3FV_PROC *UniformMatrix3fv;
        PFNGLUNIFORMMATRIX4FV_PROC *UniformMatrix4fv;
        PFNGLUSEPROGRAM_PROC *UseProgram;
        PFNGLVALIDATEPROGRAM_PROC *ValidateProgram;
        PFNGLVERTEXATTRIB1D_PROC *VertexAttrib1d;
        PFNGLVERTEXATTRIB1DV_PROC *VertexAttrib1dv;
        PFNGLVERTEXATTRIB1F_PROC *VertexAttrib1f;
        PFNGLVERTEXATTRIB1FV_PROC *VertexAttrib1fv;
        PFNGLVERTEXATTRIB1S_PROC *VertexAttrib1s;
        PFNGLVERTEXATTRIB1SV_PROC *VertexAttrib1sv;
        PFNGLVERTEXATTRIB2D_PROC *VertexAttrib2d;
        PFNGLVERTEXATTRIB2DV_PROC *VertexAttrib2dv;
        PFNGLVERTEXATTRIB2F_PROC *VertexAttrib2f;
        PFNGLVERTEXATTRIB2FV_PROC *VertexAttrib2fv;
        PFNGLVERTEXATTRIB2S_PROC *VertexAttrib2s;
        PFNGLVERTEXATTRIB2SV_PROC *VertexAttrib2sv;
        PFNGLVERTEXATTRIB3D_PROC *VertexAttrib3d;
        PFNGLVERTEXATTRIB3DV_PROC *VertexAttrib3dv;
        PFNGLVERTEXATTRIB3F_PROC *VertexAttrib3f;
        PFNGLVERTEXATTRIB3FV_PROC *VertexAttrib3fv;
        PFNGLVERTEXATTRIB3S_PROC *VertexAttrib3s;
        PFNGLVERTEXATTRIB3SV_PROC *VertexAttrib3sv;
        PFNGLVERTEXATTRIB4NBV_PROC *VertexAttrib4Nbv;
        PFNGLVERTEXATTRIB4NIV_PROC *VertexAttrib4Niv;
        PFNGLVERTEXATTRIB4NSV_PROC *VertexAttrib4Nsv;
        PFNGLVERTEXATTRIB4NUB_PROC *VertexAttrib4Nub;
        PFNGLVERTEXATTRIB4NUBV_PROC *VertexAttrib4Nubv;
        PFNGLVERTEXATTRIB4NUIV_PROC *VertexAttrib4Nuiv;
        PFNGLVERTEXATTRIB4NUSV_PROC *VertexAttrib4Nusv;
        PFNGLVERTEXATTRIB4BV_PROC *VertexAttrib4bv;
        PFNGLVERTEXATTRIB4D_PROC *VertexAttrib4d;
        PFNGLVERTEXATTRIB4DV_PROC *VertexAttrib4dv;
        PFNGLVERTEXATTRIB4F_PROC *VertexAttrib4f;
        PFNGLVERTEXATTRIB4FV_PROC *VertexAttrib4fv;
        PFNGLVERTEXATTRIB4IV_PROC *VertexAttrib4iv;
        PFNGLVERTEXATTRIB4S_PROC *VertexAttrib4s;
        PFNGLVERTEXATTRIB4SV_PROC *VertexAttrib4sv;
        PFNGLVERTEXATTRIB4UBV_PROC *VertexAttrib4ubv;
        PFNGLVERTEXATTRIB4UIV_PROC *VertexAttrib4uiv;
        PFNGLVERTEXATTRIB4USV_PROC *VertexAttrib4usv;
        PFNGLVERTEXATTRIBPOINTER_PROC *VertexAttribPointer;
        PFNGLUNIFORMMATRIX2X3FV_PROC *UniformMatrix2x3fv;
        PFNGLUNIFORMMATRIX2X4FV_PROC *UniformMatrix2x4fv;
        PFNGLUNIFORMMATRIX3X2FV_PROC *UniformMatrix3x2fv;
        PFNGLUNIFORMMATRIX3X4FV_PROC *UniformMatrix3x4fv;
        PFNGLUNIFORMMATRIX4X2FV_PROC *UniformMatrix4x2fv;
        PFNGLUNIFORMMATRIX4X3FV_PROC *UniformMatrix4x3fv;
        PFNGLBEGINCONDITIONALRENDER_PROC *BeginConditionalRender;
        PFNGLBEGINTRANSFORMFEEDBACK_PROC *BeginTransformFeedback;
        PFNGLBINDBUFFERBASE_PROC *BindBufferBase;
        PFNGLBINDBUFFERRANGE_PROC *BindBufferRange;
        PFNGLBINDFRAGDATALOCATION_PROC *BindFragDataLocation;
        PFNGLBINDFRAMEBUFFER_PROC *BindFramebuffer;
        PFNGLBINDRENDERBUFFER_PROC *BindRenderbuffer;
        PFNGLBINDVERTEXARRAY_PROC *BindVertexArray;
        PFNGLBLITFRAMEBUFFER_PROC *BlitFramebuffer;
        PFNGLCHECKFRAMEBUFFERSTATUS_PROC *CheckFramebufferStatus;
        PFNGLCLAMPCOLOR_PROC *ClampColor;
        PFNGLCLEARBUFFERFI_PROC *ClearBufferfi;
        PFNGLCLEARBUFFERFV_PROC *ClearBufferfv;
        PFNGLCLEARBUFFERIV_PROC *ClearBufferiv;
        PFNGLCLEARBUFFERUIV_PROC *ClearBufferuiv;
        PFNGLCOLORMASKI_PROC *ColorMaski;
        PFNGLDELETEFRAMEBUFFERS_PROC *DeleteFramebuffers;
        PFNGLDELETERENDERBUFFERS_PROC *DeleteRenderbuffers;
        PFNGLDELETEVERTEXARRAYS_PROC *DeleteVertexArrays;
        PFNGLDISABLEI_PROC *Disablei;
        PFNGLENABLEI_PROC *Enablei;
        PFNGLENDCONDITIONALRENDER_PROC *EndConditionalRender;
        PFNGLENDTRANSFORMFEEDBACK_PROC *EndTransformFeedback;
        PFNGLFLUSHMAPPEDBUFFERRANGE_PROC *FlushMappedBufferRange;
        PFNGLFRAMEBUFFERRENDERBUFFER_PROC *FramebufferRenderbuffer;
        PFNGLFRAMEBUFFERTEXTURE1D_PROC *FramebufferTexture1D;
        PFNGLFRAMEBUFFERTEXTURE2D_PROC *FramebufferTexture2D;
        PFNGLFRAMEBUFFERTEXTURE3D_PROC *FramebufferTexture3D;
        PFNGLFRAMEBUFFERTEXTURELAYER_PROC *FramebufferTextureLayer;
        PFNGLGENFRAMEBUFFERS_PROC *GenFramebuffers;
        PFNGLGENRENDERBUFFERS_PROC *GenRenderbuffers;
        PFNGLGENVERTEXARRAYS_PROC *GenVertexArrays;
        PFNGLGENERATEMIPMAP_PROC *GenerateMipmap;
        PFNGLGETBOOLEANI_V_PROC *GetBooleani_v;
        PFNGLGETFRAGDATALOCATION_PROC *GetFragDataLocation;
        PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIV_PROC *GetFramebufferAttachmentParameteriv;
        PFNGLGETINTEGERI_V_PROC *GetIntegeri_v;
        PFNGLGETRENDERBUFFERPARAMETERIV_PROC *GetRenderbufferParameteriv;
        PFNGLGETSTRINGI_PROC *GetStringi;
        PFNGLGETTEXPARAMETERIIV_PROC *GetTexParameterIiv;
        PFNGLGETTEXPARAMETERIUIV_PROC *GetTexParameterIuiv;
        PFNGLGETTRANSFORMFEEDBACKVARYING_PROC *GetTransformFeedbackVarying;
        PFNGLGETUNIFORMUIV_PROC *GetUniformuiv;
        PFNGLGETVERTEXATTRIBIIV_PROC *GetVertexAttribIiv;
        PFNGLGETVERTEXATTRIBIUIV_PROC *GetVertexAttribIuiv;
        PFNGLISENABLEDI_PROC *IsEnabledi;
        PFNGLISFRAMEBUFFER_PROC *IsFramebuffer;
        PFNGLISRENDERBUFFER_PROC *IsRenderbuffer;
        PFNGLISVERTEXARRAY_PROC *IsVertexArray;
        PFNGLMAPBUFFERRANGE_PROC *MapBufferRange;
        PFNGLRENDERBUFFERSTORAGE_PROC *RenderbufferStorage;
        PFNGLRENDERBUFFERSTORAGEMULTISAMPLE_PROC *RenderbufferStorageMultisample;
        PFNGLTEXPARAMETERIIV_PROC *TexParameterIiv;
        PFNGLTEXPARAMETERIUIV_PROC *TexParameterIuiv;
        PFNGLTRANSFORMFEEDBACKVARYINGS_PROC *TransformFeedbackVaryings;
        PFNGLUNIFORM1UI_PROC *Uniform1ui;
        PFNGLUNIFORM1UIV_PROC *Uniform1uiv;
        PFNGLUNIFORM2UI_PROC *Uniform2ui;
        PFNGLUNIFORM2UIV_PROC *Uniform2uiv;
        PFNGLUNIFORM3UI_PROC *Uniform3ui;
        PFNGLUNIFORM3UIV_PROC *Uniform3uiv;
        PFNGLUNIFORM4UI_PROC *Uniform4ui;
        PFNGLUNIFORM4UIV_PROC *Uniform4uiv;
        PFNGLVERTEXATTRIBI1I_PROC *VertexAttribI1i;
        PFNGLVERTEXATTRIBI1IV_PROC *VertexAttribI1iv;
        PFNGLVERTEXATTRIBI1UI_PROC *VertexAttribI1ui;
        PFNGLVERTEXATTRIBI1UIV_PROC *VertexAttribI1uiv;
        PFNGLVERTEXATTRIBI2I_PROC *VertexAttribI2i;
        PFNGLVERTEXATTRIBI2IV_PROC *VertexAttribI2iv;
        PFNGLVERTEXATTRIBI2UI_PROC *VertexAttribI2ui;
        PFNGLVERTEXATTRIBI2UIV_PROC *VertexAttribI2uiv;
        PFNGLVERTEXATTRIBI3I_PROC *VertexAttribI3i;
        PFNGLVERTEXATTRIBI3IV_PROC *VertexAttribI3iv;
        PFNGLVERTEXATTRIBI3UI_PROC *VertexAttribI3ui;
        PFNGLVERTEXATTRIBI3UIV_PROC *VertexAttribI3uiv;
        PFNGLVERTEXATTRIBI4BV_PROC *VertexAttribI4bv;
        PFNGLVERTEXATTRIBI4I_PROC *VertexAttribI4i;
        PFNGLVERTEXATTRIBI4IV_PROC *VertexAttribI4iv;
        PFNGLVERTEXATTRIBI4SV_PROC *VertexAttribI4sv;
        PFNGLVERTEXATTRIBI4UBV_PROC *VertexAttribI4ubv;
        PFNGLVERTEXATTRIBI4UI_PROC *VertexAttribI4ui;
        PFNGLVERTEXATTRIBI4UIV_PROC *VertexAttribI4uiv;
        PFNGLVERTEXATTRIBI4USV_PROC *VertexAttribI4usv;
        PFNGLVERTEXATTRIBIPOINTER_PROC *VertexAttribIPointer;
        PFNGLCOPYBUFFERSUBDATA_PROC *CopyBufferSubData;
        PFNGLDRAWARRAYSINSTANCED_PROC *DrawArraysInstanced;
        PFNGLDRAWELEMENTSINSTANCED_PROC *DrawElementsInstanced;
        PFNGLGETACTIVEUNIFORMBLOCKNAME_PROC *GetActiveUniformBlockName;
        PFNGLGETACTIVEUNIFORMBLOCKIV_PROC *GetActiveUniformBlockiv;
        PFNGLGETACTIVEUNIFORMNAME_PROC *GetActiveUniformName;
        PFNGLGETACTIVEUNIFORMSIV_PROC *GetActiveUniformsiv;
        PFNGLGETUNIFORMBLOCKINDEX_PROC *GetUniformBlockIndex;
        PFNGLGETUNIFORMINDICES_PROC *GetUniformIndices;
        PFNGLPRIMITIVERESTARTINDEX_PROC *PrimitiveRestartIndex;
        PFNGLTEXBUFFER_PROC *TexBuffer;
        PFNGLUNIFORMBLOCKBINDING_PROC *UniformBlockBinding;
        PFNGLCLIENTWAITSYNC_PROC *ClientWaitSync;
        PFNGLDELETESYNC_PROC *DeleteSync;
        PFNGLDRAWELEMENTSBASEVERTEX_PROC *DrawElementsBaseVertex;
        PFNGLDRAWELEMENTSINSTANCEDBASEVERTEX_PROC *DrawElementsInstancedBaseVertex;
        PFNGLDRAWRANGEELEMENTSBASEVERTEX_PROC *DrawRangeElementsBaseVertex;
        PFNGLFENCESYNC_PROC *FenceSync;
        PFNGLFRAMEBUFFERTEXTURE_PROC *FramebufferTexture;
        PFNGLGETBUFFERPARAMETERI64V_PROC *GetBufferParameteri64v;
        PFNGLGETINTEGER64I_V_PROC *GetInteger64i_v;
        PFNGLGETINTEGER64V_PROC *GetInteger64v;
        PFNGLGETMULTISAMPLEFV_PROC *GetMultisamplefv;
        PFNGLGETSYNCIV_PROC *GetSynciv;
        PFNGLISSYNC_PROC *IsSync;
        PFNGLMULTIDRAWELEMENTSBASEVERTEX_PROC *MultiDrawElementsBaseVertex;
        PFNGLPROVOKINGVERTEX_PROC *ProvokingVertex;
        PFNGLSAMPLEMASKI_PROC *SampleMaski;
        PFNGLTEXIMAGE2DMULTISAMPLE_PROC *TexImage2DMultisample;
        PFNGLTEXIMAGE3DMULTISAMPLE_PROC *TexImage3DMultisample;
        PFNGLWAITSYNC_PROC *WaitSync;
        PFNGLBINDFRAGDATALOCATIONINDEXED_PROC *BindFragDataLocationIndexed;
        PFNGLBINDSAMPLER_PROC *BindSampler;
        PFNGLDELETESAMPLERS_PROC *DeleteSamplers;
        PFNGLGENSAMPLERS_PROC *GenSamplers;
        PFNGLGETFRAGDATAINDEX_PROC *GetFragDataIndex;
        PFNGLGETQUERYOBJECTI64V_PROC *GetQueryObjecti64v;
        PFNGLGETQUERYOBJECTUI64V_PROC *GetQueryObjectui64v;
        PFNGLGETSAMPLERPARAMETERIIV_PROC *GetSamplerParameterIiv;
        PFNGLGETSAMPLERPARAMETERIUIV_PROC *GetSamplerParameterIuiv;
        PFNGLGETSAMPLERPARAMETERFV_PROC *GetSamplerParameterfv;
        PFNGLGETSAMPLERPARAMETERIV_PROC *GetSamplerParameteriv;
        PFNGLISSAMPLER_PROC *IsSampler;
        PFNGLQUERYCOUNTER_PROC *QueryCounter;
        PFNGLSAMPLERPARAMETERIIV_PROC *SamplerParameterIiv;
        PFNGLSAMPLERPARAMETERIUIV_PROC *SamplerParameterIuiv;
        PFNGLSAMPLERPARAMETERF_PROC *SamplerParameterf;
        PFNGLSAMPLERPARAMETERFV_PROC *SamplerParameterfv;
        PFNGLSAMPLERPARAMETERI_PROC *SamplerParameteri;
        PFNGLSAMPLERPARAMETERIV_PROC *SamplerParameteriv;
        PFNGLVERTEXATTRIBDIVISOR_PROC *VertexAttribDivisor;
        PFNGLVERTEXATTRIBP1UI_PROC *VertexAttribP1ui;
        PFNGLVERTEXATTRIBP1UIV_PROC *VertexAttribP1uiv;
        PFNGLVERTEXATTRIBP2UI_PROC *VertexAttribP2ui;
        PFNGLVERTEXATTRIBP2UIV_PROC *VertexAttribP2uiv;
        PFNGLVERTEXATTRIBP3UI_PROC *VertexAttribP3ui;
        PFNGLVERTEXATTRIBP3UIV_PROC *VertexAttribP3uiv;
        PFNGLVERTEXATTRIBP4UI_PROC *VertexAttribP4ui;
        PFNGLVERTEXATTRIBP4UIV_PROC *VertexAttribP4uiv;
        PFNGLBEGINQUERYINDEXED_PROC *BeginQueryIndexed;
        PFNGLBINDTRANSFORMFEEDBACK_PROC *BindTransformFeedback;
        PFNGLBLENDEQUATIONSEPARATEI_PROC *BlendEquationSeparatei;
        PFNGLBLENDEQUATIONI_PROC *BlendEquationi;
        PFNGLBLENDFUNCSEPARATEI_PROC *BlendFuncSeparatei;
        PFNGLBLENDFUNCI_PROC *BlendFunci;
        PFNGLDELETETRANSFORMFEEDBACKS_PROC *DeleteTransformFeedbacks;
        PFNGLDRAWARRAYSINDIRECT_PROC *DrawArraysIndirect;
        PFNGLDRAWELEMENTSINDIRECT_PROC *DrawElementsIndirect;
        PFNGLDRAWTRANSFORMFEEDBACK_PROC *DrawTransformFeedback;
        PFNGLDRAWTRANSFORMFEEDBACKSTREAM_PROC *DrawTransformFeedbackStream;
        PFNGLENDQUERYINDEXED_PROC *EndQueryIndexed;
        PFNGLGENTRANSFORMFEEDBACKS_PROC *GenTransformFeedbacks;
        PFNGLGETACTIVESUBROUTINENAME_PROC *GetActiveSubroutineName;
        PFNGLGETACTIVESUBROUTINEUNIFORMNAME_PROC *GetActiveSubroutineUniformName;
        PFNGLGETACTIVESUBROUTINEUNIFORMIV_PROC *GetActiveSubroutineUniformiv;
        PFNGLGETPROGRAMSTAGEIV_PROC *GetProgramStageiv;
        PFNGLGETQUERYINDEXEDIV_PROC *GetQueryIndexediv;
        PFNGLGETSUBROUTINEINDEX_PROC *GetSubroutineIndex;
        PFNGLGETSUBROUTINEUNIFORMLOCATION_PROC *GetSubroutineUniformLocation;
        PFNGLGETUNIFORMSUBROUTINEUIV_PROC *GetUniformSubroutineuiv;
        PFNGLGETUNIFORMDV_PROC *GetUniformdv;
        PFNGLISTRANSFORMFEEDBACK_PROC *IsTransformFeedback;
        PFNGLMINSAMPLESHADING_PROC *MinSampleShading;
        PFNGLPATCHPARAMETERFV_PROC *PatchParameterfv;
        PFNGLPATCHPARAMETERI_PROC *PatchParameteri;
        PFNGLPAUSETRANSFORMFEEDBACK_PROC *PauseTransformFeedback;
        PFNGLRESUMETRANSFORMFEEDBACK_PROC *ResumeTransformFeedback;
        PFNGLUNIFORM1D_PROC *Uniform1d;
        PFNGLUNIFORM1DV_PROC *Uniform1dv;
        PFNGLUNIFORM2D_PROC *Uniform2d;
        PFNGLUNIFORM2DV_PROC *Uniform2dv;
        PFNGLUNIFORM3D_PROC *Uniform3d;
        PFNGLUNIFORM3DV_PROC *Uniform3dv;
        PFNGLUNIFORM4D_PROC *Uniform4d;
        PFNGLUNIFORM4DV_PROC *Uniform4dv;
        PFNGLUNIFORMMATRIX2DV_PROC *UniformMatrix2dv;
        PFNGLUNIFORMMATRIX2X3DV_PROC *UniformMatrix2x3dv;
        PFNGLUNIFORMMATRIX2X4DV_PROC *UniformMatrix2x4dv;
        PFNGLUNIFORMMATRIX3DV_PROC *UniformMatrix3dv;
        PFNGLUNIFORMMATRIX3X2DV_PROC *UniformMatrix3x2dv;
        PFNGLUNIFORMMATRIX3X4DV_PROC *UniformMatrix3x4dv;
        PFNGLUNIFORMMATRIX4DV_PROC *UniformMatrix4dv;
        PFNGLUNIFORMMATRIX4X2DV_PROC *UniformMatrix4x2dv;
        PFNGLUNIFORMMATRIX4X3DV_PROC *UniformMatrix4x3dv;
        PFNGLUNIFORMSUBROUTINESUIV_PROC *UniformSubroutinesuiv;
        PFNGLACTIVESHADERPROGRAM_PROC *ActiveShaderProgram;
        PFNGLBINDPROGRAMPIPELINE_PROC *BindProgramPipeline;
        PFNGLCLEARDEPTHF_PROC *ClearDepthf;
        PFNGLCREATESHADERPROGRAMV_PROC *CreateShaderProgramv;
        PFNGLDELETEPROGRAMPIPELINES_PROC *DeleteProgramPipelines;
        PFNGLDEPTHRANGEARRAYV_PROC *DepthRangeArrayv;
        PFNGLDEPTHRANGEINDEXED_PROC *DepthRangeIndexed;
        PFNGLDEPTHRANGEF_PROC *DepthRangef;
        PFNGLGENPROGRAMPIPELINES_PROC *GenProgramPipelines;
        PFNGLGETDOUBLEI_V_PROC *GetDoublei_v;
        PFNGLGETFLOATI_V_PROC *GetFloati_v;
        PFNGLGETPROGRAMBINARY_PROC *GetProgramBinary;
        PFNGLGETPROGRAMPIPELINEINFOLOG_PROC *GetProgramPipelineInfoLog;
        PFNGLGETPROGRAMPIPELINEIV_PROC *GetProgramPipelineiv;
        PFNGLGETSHADERPRECISIONFORMAT_PROC *GetShaderPrecisionFormat;
        PFNGLGETVERTEXATTRIBLDV_PROC *GetVertexAttribLdv;
        PFNGLISPROGRAMPIPELINE_PROC *IsProgramPipeline;
        PFNGLPROGRAMBINARY_PROC *ProgramBinary;
        PFNGLPROGRAMPARAMETERI_PROC *ProgramParameteri;
        PFNGLPROGRAMUNIFORM1D_PROC *ProgramUniform1d;
        PFNGLPROGRAMUNIFORM1DV_PROC *ProgramUniform1dv;
        PFNGLPROGRAMUNIFORM1F_PROC *ProgramUniform1f;
        PFNGLPROGRAMUNIFORM1FV_PROC *ProgramUniform1fv;
        PFNGLPROGRAMUNIFORM1I_PROC *ProgramUniform1i;
        PFNGLPROGRAMUNIFORM1IV_PROC *ProgramUniform1iv;
        PFNGLPROGRAMUNIFORM1UI_PROC *ProgramUniform1ui;
        PFNGLPROGRAMUNIFORM1UIV_PROC *ProgramUniform1uiv;
        PFNGLPROGRAMUNIFORM2D_PROC *ProgramUniform2d;
        PFNGLPROGRAMUNIFORM2DV_PROC *ProgramUniform2dv;
        PFNGLPROGRAMUNIFORM2F_PROC *ProgramUniform2f;
        PFNGLPROGRAMUNIFORM2FV_PROC *ProgramUniform2fv;
        PFNGLPROGRAMUNIFORM2I_PROC *ProgramUniform2i;
        PFNGLPROGRAMUNIFORM2IV_PROC *ProgramUniform2iv;
        PFNGLPROGRAMUNIFORM2UI_PROC *ProgramUniform2ui;
        PFNGLPROGRAMUNIFORM2UIV_PROC *ProgramUniform2uiv;
        PFNGLPROGRAMUNIFORM3D_PROC *ProgramUniform3d;
        PFNGLPROGRAMUNIFORM3DV_PROC *ProgramUniform3dv;
        PFNGLPROGRAMUNIFORM3F_PROC *ProgramUniform3f;
        PFNGLPROGRAMUNIFORM3FV_PROC *ProgramUniform3fv;
        PFNGLPROGRAMUNIFORM3I_PROC *ProgramUniform3i;
        PFNGLPROGRAMUNIFORM3IV_PROC *ProgramUniform3iv;
        PFNGLPROGRAMUNIFORM3UI_PROC *ProgramUniform3ui;
        PFNGLPROGRAMUNIFORM3UIV_PROC *ProgramUniform3uiv;
        PFNGLPROGRAMUNIFORM4D_PROC *ProgramUniform4d;
        PFNGLPROGRAMUNIFORM4DV_PROC *ProgramUniform4dv;
        PFNGLPROGRAMUNIFORM4F_PROC *ProgramUniform4f;
        PFNGLPROGRAMUNIFORM4FV_PROC *ProgramUniform4fv;
        PFNGLPROGRAMUNIFORM4I_PROC *ProgramUniform4i;
        PFNGLPROGRAMUNIFORM4IV_PROC *ProgramUniform4iv;
        PFNGLPROGRAMUNIFORM4UI_PROC *ProgramUniform4ui;
        PFNGLPROGRAMUNIFORM4UIV_PROC *ProgramUniform4uiv;
        PFNGLPROGRAMUNIFORMMATRIX2DV_PROC *ProgramUniformMatrix2dv;
        PFNGLPROGRAMUNIFORMMATRIX2FV_PROC *ProgramUniformMatrix2fv;
        PFNGLPROGRAMUNIFORMMATRIX2X3DV_PROC *ProgramUniformMatrix2x3dv;
        PFNGLPROGRAMUNIFORMMATRIX2X3FV_PROC *ProgramUniformMatrix2x3fv;
        PFNGLPROGRAMUNIFORMMATRIX2X4DV_PROC *ProgramUniformMatrix2x4dv;
        PFNGLPROGRAMUNIFORMMATRIX2X4FV_PROC *ProgramUniformMatrix2x4fv;
        PFNGLPROGRAMUNIFORMMATRIX3DV_PROC *ProgramUniformMatrix3dv;
        PFNGLPROGRAMUNIFORMMATRIX3FV_PROC *ProgramUniformMatrix3fv;
        PFNGLPROGRAMUNIFORMMATRIX3X2DV_PROC *ProgramUniformMatrix3x2dv;
        PFNGLPROGRAMUNIFORMMATRIX3X2FV_PROC *ProgramUniformMatrix3x2fv;
        PFNGLPROGRAMUNIFORMMATRIX3X4DV_PROC *ProgramUniformMatrix3x4dv;
        PFNGLPROGRAMUNIFORMMATRIX3X4FV_PROC *ProgramUniformMatrix3x4fv;
        PFNGLPROGRAMUNIFORMMATRIX4DV_PROC *ProgramUniformMatrix4dv;
        PFNGLPROGRAMUNIFORMMATRIX4FV_PROC *ProgramUniformMatrix4fv;
        PFNGLPROGRAMUNIFORMMATRIX4X2DV_PROC *ProgramUniformMatrix4x2dv;
        PFNGLPROGRAMUNIFORMMATRIX4X2FV_PROC *ProgramUniformMatrix4x2fv;
        PFNGLPROGRAMUNIFORMMATRIX4X3DV_PROC *ProgramUniformMatrix4x3dv;
        PFNGLPROGRAMUNIFORMMATRIX4X3FV_PROC *ProgramUniformMatrix4x3fv;
        PFNGLRELEASESHADERCOMPILER_PROC *ReleaseShaderCompiler;
        PFNGLSCISSORARRAYV_PROC *ScissorArrayv;
        PFNGLSCISSORINDEXED_PROC *ScissorIndexed;
        PFNGLSCISSORINDEXEDV_PROC *ScissorIndexedv;
        PFNGLSHADERBINARY_PROC *ShaderBinary;
        PFNGLUSEPROGRAMSTAGES_PROC *UseProgramStages;
        PFNGLVALIDATEPROGRAMPIPELINE_PROC *ValidateProgramPipeline;
        PFNGLVERTEXATTRIBL1D_PROC *VertexAttribL1d;
        PFNGLVERTEXATTRIBL1DV_PROC *VertexAttribL1dv;
        PFNGLVERTEXATTRIBL2D_PROC *VertexAttribL2d;
        PFNGLVERTEXATTRIBL2DV_PROC *VertexAttribL2dv;
        PFNGLVERTEXATTRIBL3D_PROC *VertexAttribL3d;
        PFNGLVERTEXATTRIBL3DV_PROC *VertexAttribL3dv;
        PFNGLVERTEXATTRIBL4D_PROC *VertexAttribL4d;
        PFNGLVERTEXATTRIBL4DV_PROC *VertexAttribL4dv;
        PFNGLVERTEXATTRIBLPOINTER_PROC *VertexAttribLPointer;
        PFNGLVIEWPORTARRAYV_PROC *ViewportArrayv;
        PFNGLVIEWPORTINDEXEDF_PROC *ViewportIndexedf;
        PFNGLVIEWPORTINDEXEDFV_PROC *ViewportIndexedfv;
        PFNGLBINDIMAGETEXTURE_PROC *BindImageTexture;
        PFNGLDRAWARRAYSINSTANCEDBASEINSTANCE_PROC *DrawArraysInstancedBaseInstance;
        PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCE_PROC *DrawElementsInstancedBaseInstance;
        PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCE_PROC *DrawElementsInstancedBaseVertexBaseInstance;
        PFNGLDRAWTRANSFORMFEEDBACKINSTANCED_PROC *DrawTransformFeedbackInstanced;
        PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCED_PROC *DrawTransformFeedbackStreamInstanced;
        PFNGLGETACTIVEATOMICCOUNTERBUFFERIV_PROC *GetActiveAtomicCounterBufferiv;
        PFNGLGETINTERNALFORMATIV_PROC *GetInternalformativ;
        PFNGLMEMORYBARRIER_PROC *MemoryBarrier;
        PFNGLTEXSTORAGE1D_PROC *TexStorage1D;
        PFNGLTEXSTORAGE2D_PROC *TexStorage2D;
        PFNGLTEXSTORAGE3D_PROC *TexStorage3D;
        PFNGLBINDVERTEXBUFFER_PROC *BindVertexBuffer;
        PFNGLCLEARBUFFERDATA_PROC *ClearBufferData;
        PFNGLCLEARBUFFERSUBDATA_PROC *ClearBufferSubData;
        PFNGLCOPYIMAGESUBDATA_PROC *CopyImageSubData;
        PFNGLDEBUGMESSAGECALLBACK_PROC *DebugMessageCallback;
        PFNGLDEBUGMESSAGECONTROL_PROC *DebugMessageControl;
        PFNGLDEBUGMESSAGEINSERT_PROC *DebugMessageInsert;
        PFNGLDISPATCHCOMPUTE_PROC *DispatchCompute;
        PFNGLDISPATCHCOMPUTEINDIRECT_PROC *DispatchComputeIndirect;
        PFNGLFRAMEBUFFERPARAMETERI_PROC *FramebufferParameteri;
        PFNGLGETDEBUGMESSAGELOG_PROC *GetDebugMessageLog;
        PFNGLGETFRAMEBUFFERPARAMETERIV_PROC *GetFramebufferParameteriv;
        PFNGLGETINTERNALFORMATI64V_PROC *GetInternalformati64v;
        PFNGLGETOBJECTLABEL_PROC *GetObjectLabel;
        PFNGLGETOBJECTPTRLABEL_PROC *GetObjectPtrLabel;
        PFNGLGETPOINTERV_PROC *GetPointerv;
        PFNGLGETPROGRAMINTERFACEIV_PROC *GetProgramInterfaceiv;
        PFNGLGETPROGRAMRESOURCEINDEX_PROC *GetProgramResourceIndex;
        PFNGLGETPROGRAMRESOURCELOCATION_PROC *GetProgramResourceLocation;
        PFNGLGETPROGRAMRESOURCELOCATIONINDEX_PROC *GetProgramResourceLocationIndex;
        PFNGLGETPROGRAMRESOURCENAME_PROC *GetProgramResourceName;
        PFNGLGETPROGRAMRESOURCEIV_PROC *GetProgramResourceiv;
        PFNGLINVALIDATEBUFFERDATA_PROC *InvalidateBufferData;
        PFNGLINVALIDATEBUFFERSUBDATA_PROC *InvalidateBufferSubData;
        PFNGLINVALIDATEFRAMEBUFFER_PROC *InvalidateFramebuffer;
        PFNGLINVALIDATESUBFRAMEBUFFER_PROC *InvalidateSubFramebuffer;
        PFNGLINVALIDATETEXIMAGE_PROC *InvalidateTexImage;
        PFNGLINVALIDATETEXSUBIMAGE_PROC *InvalidateTexSubImage;
        PFNGLMULTIDRAWARRAYSINDIRECT_PROC *MultiDrawArraysIndirect;
        PFNGLMULTIDRAWELEMENTSINDIRECT_PROC *MultiDrawElementsIndirect;
        PFNGLOBJECTLABEL_PROC *ObjectLabel;
        PFNGLOBJECTPTRLABEL_PROC *ObjectPtrLabel;
        PFNGLPOPDEBUGGROUP_PROC *PopDebugGroup;
        PFNGLPUSHDEBUGGROUP_PROC *PushDebugGroup;
        PFNGLSHADERSTORAGEBLOCKBINDING_PROC *ShaderStorageBlockBinding;
        PFNGLTEXBUFFERRANGE_PROC *TexBufferRange;
        PFNGLTEXSTORAGE2DMULTISAMPLE_PROC *TexStorage2DMultisample;
        PFNGLTEXSTORAGE3DMULTISAMPLE_PROC *TexStorage3DMultisample;
        PFNGLTEXTUREVIEW_PROC *TextureView;
        PFNGLVERTEXATTRIBBINDING_PROC *VertexAttribBinding;
        PFNGLVERTEXATTRIBFORMAT_PROC *VertexAttribFormat;
        PFNGLVERTEXATTRIBIFORMAT_PROC *VertexAttribIFormat;
        PFNGLVERTEXATTRIBLFORMAT_PROC *VertexAttribLFormat;
        PFNGLVERTEXBINDINGDIVISOR_PROC *VertexBindingDivisor;
        PFNGLBINDBUFFERSBASE_PROC *BindBuffersBase;
        PFNGLBINDBUFFERSRANGE_PROC *BindBuffersRange;
        PFNGLBINDIMAGETEXTURES_PROC *BindImageTextures;
        PFNGLBINDSAMPLERS_PROC *BindSamplers;
        PFNGLBINDTEXTURES_PROC *BindTextures;
        PFNGLBINDVERTEXBUFFERS_PROC *BindVertexBuffers;
        PFNGLBUFFERSTORAGE_PROC *BufferStorage;
        PFNGLCLEARTEXIMAGE_PROC *ClearTexImage;
        PFNGLCLEARTEXSUBIMAGE_PROC *ClearTexSubImage;
    } fns;
} GLFP;
extern GLFP glfp;

#define glBindMultiTextureEXT glfp.fns.BindMultiTextureEXT
#define glCheckNamedFramebufferStatusEXT glfp.fns.CheckNamedFramebufferStatusEXT
#define glClearNamedBufferDataEXT glfp.fns.ClearNamedBufferDataEXT
#define glClearNamedBufferSubDataEXT glfp.fns.ClearNamedBufferSubDataEXT
#define glClientAttribDefaultEXT glfp.fns.ClientAttribDefaultEXT
#define glCompressedMultiTexImage1DEXT glfp.fns.CompressedMultiTexImage1DEXT
#define glCompressedMultiTexImage2DEXT glfp.fns.CompressedMultiTexImage2DEXT
#define glCompressedMultiTexImage3DEXT glfp.fns.CompressedMultiTexImage3DEXT
#define glCompressedMultiTexSubImage1DEXT glfp.fns.CompressedMultiTexSubImage1DEXT
#define glCompressedMultiTexSubImage2DEXT glfp.fns.CompressedMultiTexSubImage2DEXT
#define glCompressedMultiTexSubImage3DEXT glfp.fns.CompressedMultiTexSubImage3DEXT
#define glCompressedTextureImage1DEXT glfp.fns.CompressedTextureImage1DEXT
#define glCompressedTextureImage2DEXT glfp.fns.CompressedTextureImage2DEXT
#define glCompressedTextureImage3DEXT glfp.fns.CompressedTextureImage3DEXT
#define glCompressedTextureSubImage1DEXT glfp.fns.CompressedTextureSubImage1DEXT
#define glCompressedTextureSubImage2DEXT glfp.fns.CompressedTextureSubImage2DEXT
#define glCompressedTextureSubImage3DEXT glfp.fns.CompressedTextureSubImage3DEXT
#define glCopyMultiTexImage1DEXT glfp.fns.CopyMultiTexImage1DEXT
#define glCopyMultiTexImage2DEXT glfp.fns.CopyMultiTexImage2DEXT
#define glCopyMultiTexSubImage1DEXT glfp.fns.CopyMultiTexSubImage1DEXT
#define glCopyMultiTexSubImage2DEXT glfp.fns.CopyMultiTexSubImage2DEXT
#define glCopyMultiTexSubImage3DEXT glfp.fns.CopyMultiTexSubImage3DEXT
#define glCopyTextureImage1DEXT glfp.fns.CopyTextureImage1DEXT
#define glCopyTextureImage2DEXT glfp.fns.CopyTextureImage2DEXT
#define glCopyTextureSubImage1DEXT glfp.fns.CopyTextureSubImage1DEXT
#define glCopyTextureSubImage2DEXT glfp.fns.CopyTextureSubImage2DEXT
#define glCopyTextureSubImage3DEXT glfp.fns.CopyTextureSubImage3DEXT
#define glDisableClientStateIndexedEXT glfp.fns.DisableClientStateIndexedEXT
#define glDisableClientStateiEXT glfp.fns.DisableClientStateiEXT
#define glDisableIndexedEXT glfp.fns.DisableIndexedEXT
#define glDisableVertexArrayAttribEXT glfp.fns.DisableVertexArrayAttribEXT
#define glDisableVertexArrayEXT glfp.fns.DisableVertexArrayEXT
#define glEnableClientStateIndexedEXT glfp.fns.EnableClientStateIndexedEXT
#define glEnableClientStateiEXT glfp.fns.EnableClientStateiEXT
#define glEnableIndexedEXT glfp.fns.EnableIndexedEXT
#define glEnableVertexArrayAttribEXT glfp.fns.EnableVertexArrayAttribEXT
#define glEnableVertexArrayEXT glfp.fns.EnableVertexArrayEXT
#define glFlushMappedNamedBufferRangeEXT glfp.fns.FlushMappedNamedBufferRangeEXT
#define glFramebufferDrawBufferEXT glfp.fns.FramebufferDrawBufferEXT
#define glFramebufferDrawBuffersEXT glfp.fns.FramebufferDrawBuffersEXT
#define glFramebufferReadBufferEXT glfp.fns.FramebufferReadBufferEXT
#define glGenerateMultiTexMipmapEXT glfp.fns.GenerateMultiTexMipmapEXT
#define glGenerateTextureMipmapEXT glfp.fns.GenerateTextureMipmapEXT
#define glGetBooleanIndexedvEXT glfp.fns.GetBooleanIndexedvEXT
#define glGetCompressedMultiTexImageEXT glfp.fns.GetCompressedMultiTexImageEXT
#define glGetCompressedTextureImageEXT glfp.fns.GetCompressedTextureImageEXT
#define glGetDoubleIndexedvEXT glfp.fns.GetDoubleIndexedvEXT
#define glGetDoublei_vEXT glfp.fns.GetDoublei_vEXT
#define glGetFloatIndexedvEXT glfp.fns.GetFloatIndexedvEXT
#define glGetFloati_vEXT glfp.fns.GetFloati_vEXT
#define glGetFramebufferParameterivEXT glfp.fns.GetFramebufferParameterivEXT
#define glGetIntegerIndexedvEXT glfp.fns.GetIntegerIndexedvEXT
#define glGetMultiTexEnvfvEXT glfp.fns.GetMultiTexEnvfvEXT
#define glGetMultiTexEnvivEXT glfp.fns.GetMultiTexEnvivEXT
#define glGetMultiTexGendvEXT glfp.fns.GetMultiTexGendvEXT
#define glGetMultiTexGenfvEXT glfp.fns.GetMultiTexGenfvEXT
#define glGetMultiTexGenivEXT glfp.fns.GetMultiTexGenivEXT
#define glGetMultiTexImageEXT glfp.fns.GetMultiTexImageEXT
#define glGetMultiTexLevelParameterfvEXT glfp.fns.GetMultiTexLevelParameterfvEXT
#define glGetMultiTexLevelParameterivEXT glfp.fns.GetMultiTexLevelParameterivEXT
#define glGetMultiTexParameterIivEXT glfp.fns.GetMultiTexParameterIivEXT
#define glGetMultiTexParameterIuivEXT glfp.fns.GetMultiTexParameterIuivEXT
#define glGetMultiTexParameterfvEXT glfp.fns.GetMultiTexParameterfvEXT
#define glGetMultiTexParameterivEXT glfp.fns.GetMultiTexParameterivEXT
#define glGetNamedBufferParameterivEXT glfp.fns.GetNamedBufferParameterivEXT
#define glGetNamedBufferPointervEXT glfp.fns.GetNamedBufferPointervEXT
#define glGetNamedBufferSubDataEXT glfp.fns.GetNamedBufferSubDataEXT
#define glGetNamedFramebufferAttachmentParameterivEXT glfp.fns.GetNamedFramebufferAttachmentParameterivEXT
#define glGetNamedFramebufferParameterivEXT glfp.fns.GetNamedFramebufferParameterivEXT
#define glGetNamedProgramLocalParameterIivEXT glfp.fns.GetNamedProgramLocalParameterIivEXT
#define glGetNamedProgramLocalParameterIuivEXT glfp.fns.GetNamedProgramLocalParameterIuivEXT
#define glGetNamedProgramLocalParameterdvEXT glfp.fns.GetNamedProgramLocalParameterdvEXT
#define glGetNamedProgramLocalParameterfvEXT glfp.fns.GetNamedProgramLocalParameterfvEXT
#define glGetNamedProgramStringEXT glfp.fns.GetNamedProgramStringEXT
#define glGetNamedProgramivEXT glfp.fns.GetNamedProgramivEXT
#define glGetNamedRenderbufferParameterivEXT glfp.fns.GetNamedRenderbufferParameterivEXT
#define glGetPointerIndexedvEXT glfp.fns.GetPointerIndexedvEXT
#define glGetPointeri_vEXT glfp.fns.GetPointeri_vEXT
#define glGetTextureImageEXT glfp.fns.GetTextureImageEXT
#define glGetTextureLevelParameterfvEXT glfp.fns.GetTextureLevelParameterfvEXT
#define glGetTextureLevelParameterivEXT glfp.fns.GetTextureLevelParameterivEXT
#define glGetTextureParameterIivEXT glfp.fns.GetTextureParameterIivEXT
#define glGetTextureParameterIuivEXT glfp.fns.GetTextureParameterIuivEXT
#define glGetTextureParameterfvEXT glfp.fns.GetTextureParameterfvEXT
#define glGetTextureParameterivEXT glfp.fns.GetTextureParameterivEXT
#define glGetVertexArrayIntegeri_vEXT glfp.fns.GetVertexArrayIntegeri_vEXT
#define glGetVertexArrayIntegervEXT glfp.fns.GetVertexArrayIntegervEXT
#define glGetVertexArrayPointeri_vEXT glfp.fns.GetVertexArrayPointeri_vEXT
#define glGetVertexArrayPointervEXT glfp.fns.GetVertexArrayPointervEXT
#define glIsEnabledIndexedEXT glfp.fns.IsEnabledIndexedEXT
#define glMapNamedBufferEXT glfp.fns.MapNamedBufferEXT
#define glMapNamedBufferRangeEXT glfp.fns.MapNamedBufferRangeEXT
#define glMatrixFrustumEXT glfp.fns.MatrixFrustumEXT
#define glMatrixLoadIdentityEXT glfp.fns.MatrixLoadIdentityEXT
#define glMatrixLoadTransposedEXT glfp.fns.MatrixLoadTransposedEXT
#define glMatrixLoadTransposefEXT glfp.fns.MatrixLoadTransposefEXT
#define glMatrixLoaddEXT glfp.fns.MatrixLoaddEXT
#define glMatrixLoadfEXT glfp.fns.MatrixLoadfEXT
#define glMatrixMultTransposedEXT glfp.fns.MatrixMultTransposedEXT
#define glMatrixMultTransposefEXT glfp.fns.MatrixMultTransposefEXT
#define glMatrixMultdEXT glfp.fns.MatrixMultdEXT
#define glMatrixMultfEXT glfp.fns.MatrixMultfEXT
#define glMatrixOrthoEXT glfp.fns.MatrixOrthoEXT
#define glMatrixPopEXT glfp.fns.MatrixPopEXT
#define glMatrixPushEXT glfp.fns.MatrixPushEXT
#define glMatrixRotatedEXT glfp.fns.MatrixRotatedEXT
#define glMatrixRotatefEXT glfp.fns.MatrixRotatefEXT
#define glMatrixScaledEXT glfp.fns.MatrixScaledEXT
#define glMatrixScalefEXT glfp.fns.MatrixScalefEXT
#define glMatrixTranslatedEXT glfp.fns.MatrixTranslatedEXT
#define glMatrixTranslatefEXT glfp.fns.MatrixTranslatefEXT
#define glMultiTexBufferEXT glfp.fns.MultiTexBufferEXT
#define glMultiTexCoordPointerEXT glfp.fns.MultiTexCoordPointerEXT
#define glMultiTexEnvfEXT glfp.fns.MultiTexEnvfEXT
#define glMultiTexEnvfvEXT glfp.fns.MultiTexEnvfvEXT
#define glMultiTexEnviEXT glfp.fns.MultiTexEnviEXT
#define glMultiTexEnvivEXT glfp.fns.MultiTexEnvivEXT
#define glMultiTexGendEXT glfp.fns.MultiTexGendEXT
#define glMultiTexGendvEXT glfp.fns.MultiTexGendvEXT
#define glMultiTexGenfEXT glfp.fns.MultiTexGenfEXT
#define glMultiTexGenfvEXT glfp.fns.MultiTexGenfvEXT
#define glMultiTexGeniEXT glfp.fns.MultiTexGeniEXT
#define glMultiTexGenivEXT glfp.fns.MultiTexGenivEXT
#define glMultiTexImage1DEXT glfp.fns.MultiTexImage1DEXT
#define glMultiTexImage2DEXT glfp.fns.MultiTexImage2DEXT
#define glMultiTexImage3DEXT glfp.fns.MultiTexImage3DEXT
#define glMultiTexParameterIivEXT glfp.fns.MultiTexParameterIivEXT
#define glMultiTexParameterIuivEXT glfp.fns.MultiTexParameterIuivEXT
#define glMultiTexParameterfEXT glfp.fns.MultiTexParameterfEXT
#define glMultiTexParameterfvEXT glfp.fns.MultiTexParameterfvEXT
#define glMultiTexParameteriEXT glfp.fns.MultiTexParameteriEXT
#define glMultiTexParameterivEXT glfp.fns.MultiTexParameterivEXT
#define glMultiTexRenderbufferEXT glfp.fns.MultiTexRenderbufferEXT
#define glMultiTexSubImage1DEXT glfp.fns.MultiTexSubImage1DEXT
#define glMultiTexSubImage2DEXT glfp.fns.MultiTexSubImage2DEXT
#define glMultiTexSubImage3DEXT glfp.fns.MultiTexSubImage3DEXT
#define glNamedBufferDataEXT glfp.fns.NamedBufferDataEXT
#define glNamedBufferStorageEXT glfp.fns.NamedBufferStorageEXT
#define glNamedBufferSubDataEXT glfp.fns.NamedBufferSubDataEXT
#define glNamedCopyBufferSubDataEXT glfp.fns.NamedCopyBufferSubDataEXT
#define glNamedFramebufferParameteriEXT glfp.fns.NamedFramebufferParameteriEXT
#define glNamedFramebufferRenderbufferEXT glfp.fns.NamedFramebufferRenderbufferEXT
#define glNamedFramebufferTexture1DEXT glfp.fns.NamedFramebufferTexture1DEXT
#define glNamedFramebufferTexture2DEXT glfp.fns.NamedFramebufferTexture2DEXT
#define glNamedFramebufferTexture3DEXT glfp.fns.NamedFramebufferTexture3DEXT
#define glNamedFramebufferTextureEXT glfp.fns.NamedFramebufferTextureEXT
#define glNamedFramebufferTextureFaceEXT glfp.fns.NamedFramebufferTextureFaceEXT
#define glNamedFramebufferTextureLayerEXT glfp.fns.NamedFramebufferTextureLayerEXT
#define glNamedProgramLocalParameter4dEXT glfp.fns.NamedProgramLocalParameter4dEXT
#define glNamedProgramLocalParameter4dvEXT glfp.fns.NamedProgramLocalParameter4dvEXT
#define glNamedProgramLocalParameter4fEXT glfp.fns.NamedProgramLocalParameter4fEXT
#define glNamedProgramLocalParameter4fvEXT glfp.fns.NamedProgramLocalParameter4fvEXT
#define glNamedProgramLocalParameterI4iEXT glfp.fns.NamedProgramLocalParameterI4iEXT
#define glNamedProgramLocalParameterI4ivEXT glfp.fns.NamedProgramLocalParameterI4ivEXT
#define glNamedProgramLocalParameterI4uiEXT glfp.fns.NamedProgramLocalParameterI4uiEXT
#define glNamedProgramLocalParameterI4uivEXT glfp.fns.NamedProgramLocalParameterI4uivEXT
#define glNamedProgramLocalParameters4fvEXT glfp.fns.NamedProgramLocalParameters4fvEXT
#define glNamedProgramLocalParametersI4ivEXT glfp.fns.NamedProgramLocalParametersI4ivEXT
#define glNamedProgramLocalParametersI4uivEXT glfp.fns.NamedProgramLocalParametersI4uivEXT
#define glNamedProgramStringEXT glfp.fns.NamedProgramStringEXT
#define glNamedRenderbufferStorageEXT glfp.fns.NamedRenderbufferStorageEXT
#define glNamedRenderbufferStorageMultisampleCoverageEXT glfp.fns.NamedRenderbufferStorageMultisampleCoverageEXT
#define glNamedRenderbufferStorageMultisampleEXT glfp.fns.NamedRenderbufferStorageMultisampleEXT
#define glProgramUniform1dEXT glfp.fns.ProgramUniform1dEXT
#define glProgramUniform1dvEXT glfp.fns.ProgramUniform1dvEXT
#define glProgramUniform1fEXT glfp.fns.ProgramUniform1fEXT
#define glProgramUniform1fvEXT glfp.fns.ProgramUniform1fvEXT
#define glProgramUniform1iEXT glfp.fns.ProgramUniform1iEXT
#define glProgramUniform1ivEXT glfp.fns.ProgramUniform1ivEXT
#define glProgramUniform1uiEXT glfp.fns.ProgramUniform1uiEXT
#define glProgramUniform1uivEXT glfp.fns.ProgramUniform1uivEXT
#define glProgramUniform2dEXT glfp.fns.ProgramUniform2dEXT
#define glProgramUniform2dvEXT glfp.fns.ProgramUniform2dvEXT
#define glProgramUniform2fEXT glfp.fns.ProgramUniform2fEXT
#define glProgramUniform2fvEXT glfp.fns.ProgramUniform2fvEXT
#define glProgramUniform2iEXT glfp.fns.ProgramUniform2iEXT
#define glProgramUniform2ivEXT glfp.fns.ProgramUniform2ivEXT
#define glProgramUniform2uiEXT glfp.fns.ProgramUniform2uiEXT
#define glProgramUniform2uivEXT glfp.fns.ProgramUniform2uivEXT
#define glProgramUniform3dEXT glfp.fns.ProgramUniform3dEXT
#define glProgramUniform3dvEXT glfp.fns.ProgramUniform3dvEXT
#define glProgramUniform3fEXT glfp.fns.ProgramUniform3fEXT
#define glProgramUniform3fvEXT glfp.fns.ProgramUniform3fvEXT
#define glProgramUniform3iEXT glfp.fns.ProgramUniform3iEXT
#define glProgramUniform3ivEXT glfp.fns.ProgramUniform3ivEXT
#define glProgramUniform3uiEXT glfp.fns.ProgramUniform3uiEXT
#define glProgramUniform3uivEXT glfp.fns.ProgramUniform3uivEXT
#define glProgramUniform4dEXT glfp.fns.ProgramUniform4dEXT
#define glProgramUniform4dvEXT glfp.fns.ProgramUniform4dvEXT
#define glProgramUniform4fEXT glfp.fns.ProgramUniform4fEXT
#define glProgramUniform4fvEXT glfp.fns.ProgramUniform4fvEXT
#define glProgramUniform4iEXT glfp.fns.ProgramUniform4iEXT
#define glProgramUniform4ivEXT glfp.fns.ProgramUniform4ivEXT
#define glProgramUniform4uiEXT glfp.fns.ProgramUniform4uiEXT
#define glProgramUniform4uivEXT glfp.fns.ProgramUniform4uivEXT
#define glProgramUniformMatrix2dvEXT glfp.fns.ProgramUniformMatrix2dvEXT
#define glProgramUniformMatrix2fvEXT glfp.fns.ProgramUniformMatrix2fvEXT
#define glProgramUniformMatrix2x3dvEXT glfp.fns.ProgramUniformMatrix2x3dvEXT
#define glProgramUniformMatrix2x3fvEXT glfp.fns.ProgramUniformMatrix2x3fvEXT
#define glProgramUniformMatrix2x4dvEXT glfp.fns.ProgramUniformMatrix2x4dvEXT
#define glProgramUniformMatrix2x4fvEXT glfp.fns.ProgramUniformMatrix2x4fvEXT
#define glProgramUniformMatrix3dvEXT glfp.fns.ProgramUniformMatrix3dvEXT
#define glProgramUniformMatrix3fvEXT glfp.fns.ProgramUniformMatrix3fvEXT
#define glProgramUniformMatrix3x2dvEXT glfp.fns.ProgramUniformMatrix3x2dvEXT
#define glProgramUniformMatrix3x2fvEXT glfp.fns.ProgramUniformMatrix3x2fvEXT
#define glProgramUniformMatrix3x4dvEXT glfp.fns.ProgramUniformMatrix3x4dvEXT
#define glProgramUniformMatrix3x4fvEXT glfp.fns.ProgramUniformMatrix3x4fvEXT
#define glProgramUniformMatrix4dvEXT glfp.fns.ProgramUniformMatrix4dvEXT
#define glProgramUniformMatrix4fvEXT glfp.fns.ProgramUniformMatrix4fvEXT
#define glProgramUniformMatrix4x2dvEXT glfp.fns.ProgramUniformMatrix4x2dvEXT
#define glProgramUniformMatrix4x2fvEXT glfp.fns.ProgramUniformMatrix4x2fvEXT
#define glProgramUniformMatrix4x3dvEXT glfp.fns.ProgramUniformMatrix4x3dvEXT
#define glProgramUniformMatrix4x3fvEXT glfp.fns.ProgramUniformMatrix4x3fvEXT
#define glPushClientAttribDefaultEXT glfp.fns.PushClientAttribDefaultEXT
#define glTextureBufferEXT glfp.fns.TextureBufferEXT
#define glTextureBufferRangeEXT glfp.fns.TextureBufferRangeEXT
#define glTextureImage1DEXT glfp.fns.TextureImage1DEXT
#define glTextureImage2DEXT glfp.fns.TextureImage2DEXT
#define glTextureImage3DEXT glfp.fns.TextureImage3DEXT
#define glTexturePageCommitmentEXT glfp.fns.TexturePageCommitmentEXT
#define glTextureParameterIivEXT glfp.fns.TextureParameterIivEXT
#define glTextureParameterIuivEXT glfp.fns.TextureParameterIuivEXT
#define glTextureParameterfEXT glfp.fns.TextureParameterfEXT
#define glTextureParameterfvEXT glfp.fns.TextureParameterfvEXT
#define glTextureParameteriEXT glfp.fns.TextureParameteriEXT
#define glTextureParameterivEXT glfp.fns.TextureParameterivEXT
#define glTextureRenderbufferEXT glfp.fns.TextureRenderbufferEXT
#define glTextureStorage1DEXT glfp.fns.TextureStorage1DEXT
#define glTextureStorage2DEXT glfp.fns.TextureStorage2DEXT
#define glTextureStorage2DMultisampleEXT glfp.fns.TextureStorage2DMultisampleEXT
#define glTextureStorage3DEXT glfp.fns.TextureStorage3DEXT
#define glTextureStorage3DMultisampleEXT glfp.fns.TextureStorage3DMultisampleEXT
#define glTextureSubImage1DEXT glfp.fns.TextureSubImage1DEXT
#define glTextureSubImage2DEXT glfp.fns.TextureSubImage2DEXT
#define glTextureSubImage3DEXT glfp.fns.TextureSubImage3DEXT
#define glUnmapNamedBufferEXT glfp.fns.UnmapNamedBufferEXT
#define glVertexArrayBindVertexBufferEXT glfp.fns.VertexArrayBindVertexBufferEXT
#define glVertexArrayColorOffsetEXT glfp.fns.VertexArrayColorOffsetEXT
#define glVertexArrayEdgeFlagOffsetEXT glfp.fns.VertexArrayEdgeFlagOffsetEXT
#define glVertexArrayFogCoordOffsetEXT glfp.fns.VertexArrayFogCoordOffsetEXT
#define glVertexArrayIndexOffsetEXT glfp.fns.VertexArrayIndexOffsetEXT
#define glVertexArrayMultiTexCoordOffsetEXT glfp.fns.VertexArrayMultiTexCoordOffsetEXT
#define glVertexArrayNormalOffsetEXT glfp.fns.VertexArrayNormalOffsetEXT
#define glVertexArraySecondaryColorOffsetEXT glfp.fns.VertexArraySecondaryColorOffsetEXT
#define glVertexArrayTexCoordOffsetEXT glfp.fns.VertexArrayTexCoordOffsetEXT
#define glVertexArrayVertexAttribBindingEXT glfp.fns.VertexArrayVertexAttribBindingEXT
#define glVertexArrayVertexAttribDivisorEXT glfp.fns.VertexArrayVertexAttribDivisorEXT
#define glVertexArrayVertexAttribFormatEXT glfp.fns.VertexArrayVertexAttribFormatEXT
#define glVertexArrayVertexAttribIFormatEXT glfp.fns.VertexArrayVertexAttribIFormatEXT
#define glVertexArrayVertexAttribIOffsetEXT glfp.fns.VertexArrayVertexAttribIOffsetEXT
#define glVertexArrayVertexAttribLFormatEXT glfp.fns.VertexArrayVertexAttribLFormatEXT
#define glVertexArrayVertexAttribLOffsetEXT glfp.fns.VertexArrayVertexAttribLOffsetEXT
#define glVertexArrayVertexAttribOffsetEXT glfp.fns.VertexArrayVertexAttribOffsetEXT
#define glVertexArrayVertexBindingDivisorEXT glfp.fns.VertexArrayVertexBindingDivisorEXT
#define glVertexArrayVertexOffsetEXT glfp.fns.VertexArrayVertexOffsetEXT



#define glCopyTexSubImage3D glfp.fns.CopyTexSubImage3D
#define glDrawRangeElements glfp.fns.DrawRangeElements
#define glTexImage3D glfp.fns.TexImage3D
#define glTexSubImage3D glfp.fns.TexSubImage3D

#define glActiveTexture glfp.fns.ActiveTexture
#define glCompressedTexImage1D glfp.fns.CompressedTexImage1D
#define glCompressedTexImage2D glfp.fns.CompressedTexImage2D
#define glCompressedTexImage3D glfp.fns.CompressedTexImage3D
#define glCompressedTexSubImage1D glfp.fns.CompressedTexSubImage1D
#define glCompressedTexSubImage2D glfp.fns.CompressedTexSubImage2D
#define glCompressedTexSubImage3D glfp.fns.CompressedTexSubImage3D
#define glGetCompressedTexImage glfp.fns.GetCompressedTexImage
#define glSampleCoverage glfp.fns.SampleCoverage

#define glBlendColor glfp.fns.BlendColor
#define glBlendEquation glfp.fns.BlendEquation
#define glBlendFuncSeparate glfp.fns.BlendFuncSeparate
#define glMultiDrawArrays glfp.fns.MultiDrawArrays
#define glMultiDrawElements glfp.fns.MultiDrawElements
#define glPointParameterf glfp.fns.PointParameterf
#define glPointParameterfv glfp.fns.PointParameterfv
#define glPointParameteri glfp.fns.PointParameteri
#define glPointParameteriv glfp.fns.PointParameteriv

#define glBeginQuery glfp.fns.BeginQuery
#define glBindBuffer glfp.fns.BindBuffer
#define glBufferData glfp.fns.BufferData
#define glBufferSubData glfp.fns.BufferSubData
#define glDeleteBuffers glfp.fns.DeleteBuffers
#define glDeleteQueries glfp.fns.DeleteQueries
#define glEndQuery glfp.fns.EndQuery
#define glGenBuffers glfp.fns.GenBuffers
#define glGenQueries glfp.fns.GenQueries
#define glGetBufferParameteriv glfp.fns.GetBufferParameteriv
#define glGetBufferPointerv glfp.fns.GetBufferPointerv
#define glGetBufferSubData glfp.fns.GetBufferSubData
#define glGetQueryObjectiv glfp.fns.GetQueryObjectiv
#define glGetQueryObjectuiv glfp.fns.GetQueryObjectuiv
#define glGetQueryiv glfp.fns.GetQueryiv
#define glIsBuffer glfp.fns.IsBuffer
#define glIsQuery glfp.fns.IsQuery
#define glMapBuffer glfp.fns.MapBuffer
#define glUnmapBuffer glfp.fns.UnmapBuffer

#define glAttachShader glfp.fns.AttachShader
#define glBindAttribLocation glfp.fns.BindAttribLocation
#define glBlendEquationSeparate glfp.fns.BlendEquationSeparate
#define glCompileShader glfp.fns.CompileShader
#define glCreateProgram glfp.fns.CreateProgram
#define glCreateShader glfp.fns.CreateShader
#define glDeleteProgram glfp.fns.DeleteProgram
#define glDeleteShader glfp.fns.DeleteShader
#define glDetachShader glfp.fns.DetachShader
#define glDisableVertexAttribArray glfp.fns.DisableVertexAttribArray
#define glDrawBuffers glfp.fns.DrawBuffers
#define glEnableVertexAttribArray glfp.fns.EnableVertexAttribArray
#define glGetActiveAttrib glfp.fns.GetActiveAttrib
#define glGetActiveUniform glfp.fns.GetActiveUniform
#define glGetAttachedShaders glfp.fns.GetAttachedShaders
#define glGetAttribLocation glfp.fns.GetAttribLocation
#define glGetProgramInfoLog glfp.fns.GetProgramInfoLog
#define glGetProgramiv glfp.fns.GetProgramiv
#define glGetShaderInfoLog glfp.fns.GetShaderInfoLog
#define glGetShaderSource glfp.fns.GetShaderSource
#define glGetShaderiv glfp.fns.GetShaderiv
#define glGetUniformLocation glfp.fns.GetUniformLocation
#define glGetUniformfv glfp.fns.GetUniformfv
#define glGetUniformiv glfp.fns.GetUniformiv
#define glGetVertexAttribPointerv glfp.fns.GetVertexAttribPointerv
#define glGetVertexAttribdv glfp.fns.GetVertexAttribdv
#define glGetVertexAttribfv glfp.fns.GetVertexAttribfv
#define glGetVertexAttribiv glfp.fns.GetVertexAttribiv
#define glIsProgram glfp.fns.IsProgram
#define glIsShader glfp.fns.IsShader
#define glLinkProgram glfp.fns.LinkProgram
#define glShaderSource glfp.fns.ShaderSource
#define glStencilFuncSeparate glfp.fns.StencilFuncSeparate
#define glStencilMaskSeparate glfp.fns.StencilMaskSeparate
#define glStencilOpSeparate glfp.fns.StencilOpSeparate
#define glUniform1f glfp.fns.Uniform1f
#define glUniform1fv glfp.fns.Uniform1fv
#define glUniform1i glfp.fns.Uniform1i
#define glUniform1iv glfp.fns.Uniform1iv
#define glUniform2f glfp.fns.Uniform2f
#define glUniform2fv glfp.fns.Uniform2fv
#define glUniform2i glfp.fns.Uniform2i
#define glUniform2iv glfp.fns.Uniform2iv
#define glUniform3f glfp.fns.Uniform3f
#define glUniform3fv glfp.fns.Uniform3fv
#define glUniform3i glfp.fns.Uniform3i
#define glUniform3iv glfp.fns.Uniform3iv
#define glUniform4f glfp.fns.Uniform4f
#define glUniform4fv glfp.fns.Uniform4fv
#define glUniform4i glfp.fns.Uniform4i
#define glUniform4iv glfp.fns.Uniform4iv
#define glUniformMatrix2fv glfp.fns.UniformMatrix2fv
#define glUniformMatrix3fv glfp.fns.UniformMatrix3fv
#define glUniformMatrix4fv glfp.fns.UniformMatrix4fv
#define glUseProgram glfp.fns.UseProgram
#define glValidateProgram glfp.fns.ValidateProgram
#define glVertexAttrib1d glfp.fns.VertexAttrib1d
#define glVertexAttrib1dv glfp.fns.VertexAttrib1dv
#define glVertexAttrib1f glfp.fns.VertexAttrib1f
#define glVertexAttrib1fv glfp.fns.VertexAttrib1fv
#define glVertexAttrib1s glfp.fns.VertexAttrib1s
#define glVertexAttrib1sv glfp.fns.VertexAttrib1sv
#define glVertexAttrib2d glfp.fns.VertexAttrib2d
#define glVertexAttrib2dv glfp.fns.VertexAttrib2dv
#define glVertexAttrib2f glfp.fns.VertexAttrib2f
#define glVertexAttrib2fv glfp.fns.VertexAttrib2fv
#define glVertexAttrib2s glfp.fns.VertexAttrib2s
#define glVertexAttrib2sv glfp.fns.VertexAttrib2sv
#define glVertexAttrib3d glfp.fns.VertexAttrib3d
#define glVertexAttrib3dv glfp.fns.VertexAttrib3dv
#define glVertexAttrib3f glfp.fns.VertexAttrib3f
#define glVertexAttrib3fv glfp.fns.VertexAttrib3fv
#define glVertexAttrib3s glfp.fns.VertexAttrib3s
#define glVertexAttrib3sv glfp.fns.VertexAttrib3sv
#define glVertexAttrib4Nbv glfp.fns.VertexAttrib4Nbv
#define glVertexAttrib4Niv glfp.fns.VertexAttrib4Niv
#define glVertexAttrib4Nsv glfp.fns.VertexAttrib4Nsv
#define glVertexAttrib4Nub glfp.fns.VertexAttrib4Nub
#define glVertexAttrib4Nubv glfp.fns.VertexAttrib4Nubv
#define glVertexAttrib4Nuiv glfp.fns.VertexAttrib4Nuiv
#define glVertexAttrib4Nusv glfp.fns.VertexAttrib4Nusv
#define glVertexAttrib4bv glfp.fns.VertexAttrib4bv
#define glVertexAttrib4d glfp.fns.VertexAttrib4d
#define glVertexAttrib4dv glfp.fns.VertexAttrib4dv
#define glVertexAttrib4f glfp.fns.VertexAttrib4f
#define glVertexAttrib4fv glfp.fns.VertexAttrib4fv
#define glVertexAttrib4iv glfp.fns.VertexAttrib4iv
#define glVertexAttrib4s glfp.fns.VertexAttrib4s
#define glVertexAttrib4sv glfp.fns.VertexAttrib4sv
#define glVertexAttrib4ubv glfp.fns.VertexAttrib4ubv
#define glVertexAttrib4uiv glfp.fns.VertexAttrib4uiv
#define glVertexAttrib4usv glfp.fns.VertexAttrib4usv
#define glVertexAttribPointer glfp.fns.VertexAttribPointer

#define glUniformMatrix2x3fv glfp.fns.UniformMatrix2x3fv
#define glUniformMatrix2x4fv glfp.fns.UniformMatrix2x4fv
#define glUniformMatrix3x2fv glfp.fns.UniformMatrix3x2fv
#define glUniformMatrix3x4fv glfp.fns.UniformMatrix3x4fv
#define glUniformMatrix4x2fv glfp.fns.UniformMatrix4x2fv
#define glUniformMatrix4x3fv glfp.fns.UniformMatrix4x3fv

#define glBeginConditionalRender glfp.fns.BeginConditionalRender
#define glBeginTransformFeedback glfp.fns.BeginTransformFeedback
#define glBindBufferBase glfp.fns.BindBufferBase
#define glBindBufferRange glfp.fns.BindBufferRange
#define glBindFragDataLocation glfp.fns.BindFragDataLocation
#define glBindFramebuffer glfp.fns.BindFramebuffer
#define glBindRenderbuffer glfp.fns.BindRenderbuffer
#define glBindVertexArray glfp.fns.BindVertexArray
#define glBlitFramebuffer glfp.fns.BlitFramebuffer
#define glCheckFramebufferStatus glfp.fns.CheckFramebufferStatus
#define glClampColor glfp.fns.ClampColor
#define glClearBufferfi glfp.fns.ClearBufferfi
#define glClearBufferfv glfp.fns.ClearBufferfv
#define glClearBufferiv glfp.fns.ClearBufferiv
#define glClearBufferuiv glfp.fns.ClearBufferuiv
#define glColorMaski glfp.fns.ColorMaski
#define glDeleteFramebuffers glfp.fns.DeleteFramebuffers
#define glDeleteRenderbuffers glfp.fns.DeleteRenderbuffers
#define glDeleteVertexArrays glfp.fns.DeleteVertexArrays
#define glDisablei glfp.fns.Disablei
#define glEnablei glfp.fns.Enablei
#define glEndConditionalRender glfp.fns.EndConditionalRender
#define glEndTransformFeedback glfp.fns.EndTransformFeedback
#define glFlushMappedBufferRange glfp.fns.FlushMappedBufferRange
#define glFramebufferRenderbuffer glfp.fns.FramebufferRenderbuffer
#define glFramebufferTexture1D glfp.fns.FramebufferTexture1D
#define glFramebufferTexture2D glfp.fns.FramebufferTexture2D
#define glFramebufferTexture3D glfp.fns.FramebufferTexture3D
#define glFramebufferTextureLayer glfp.fns.FramebufferTextureLayer
#define glGenFramebuffers glfp.fns.GenFramebuffers
#define glGenRenderbuffers glfp.fns.GenRenderbuffers
#define glGenVertexArrays glfp.fns.GenVertexArrays
#define glGenerateMipmap glfp.fns.GenerateMipmap
#define glGetBooleani_v glfp.fns.GetBooleani_v
#define glGetFragDataLocation glfp.fns.GetFragDataLocation
#define glGetFramebufferAttachmentParameteriv glfp.fns.GetFramebufferAttachmentParameteriv
#define glGetIntegeri_v glfp.fns.GetIntegeri_v
#define glGetRenderbufferParameteriv glfp.fns.GetRenderbufferParameteriv
#define glGetStringi glfp.fns.GetStringi
#define glGetTexParameterIiv glfp.fns.GetTexParameterIiv
#define glGetTexParameterIuiv glfp.fns.GetTexParameterIuiv
#define glGetTransformFeedbackVarying glfp.fns.GetTransformFeedbackVarying
#define glGetUniformuiv glfp.fns.GetUniformuiv
#define glGetVertexAttribIiv glfp.fns.GetVertexAttribIiv
#define glGetVertexAttribIuiv glfp.fns.GetVertexAttribIuiv
#define glIsEnabledi glfp.fns.IsEnabledi
#define glIsFramebuffer glfp.fns.IsFramebuffer
#define glIsRenderbuffer glfp.fns.IsRenderbuffer
#define glIsVertexArray glfp.fns.IsVertexArray
#define glMapBufferRange glfp.fns.MapBufferRange
#define glRenderbufferStorage glfp.fns.RenderbufferStorage
#define glRenderbufferStorageMultisample glfp.fns.RenderbufferStorageMultisample
#define glTexParameterIiv glfp.fns.TexParameterIiv
#define glTexParameterIuiv glfp.fns.TexParameterIuiv
#define glTransformFeedbackVaryings glfp.fns.TransformFeedbackVaryings
#define glUniform1ui glfp.fns.Uniform1ui
#define glUniform1uiv glfp.fns.Uniform1uiv
#define glUniform2ui glfp.fns.Uniform2ui
#define glUniform2uiv glfp.fns.Uniform2uiv
#define glUniform3ui glfp.fns.Uniform3ui
#define glUniform3uiv glfp.fns.Uniform3uiv
#define glUniform4ui glfp.fns.Uniform4ui
#define glUniform4uiv glfp.fns.Uniform4uiv
#define glVertexAttribI1i glfp.fns.VertexAttribI1i
#define glVertexAttribI1iv glfp.fns.VertexAttribI1iv
#define glVertexAttribI1ui glfp.fns.VertexAttribI1ui
#define glVertexAttribI1uiv glfp.fns.VertexAttribI1uiv
#define glVertexAttribI2i glfp.fns.VertexAttribI2i
#define glVertexAttribI2iv glfp.fns.VertexAttribI2iv
#define glVertexAttribI2ui glfp.fns.VertexAttribI2ui
#define glVertexAttribI2uiv glfp.fns.VertexAttribI2uiv
#define glVertexAttribI3i glfp.fns.VertexAttribI3i
#define glVertexAttribI3iv glfp.fns.VertexAttribI3iv
#define glVertexAttribI3ui glfp.fns.VertexAttribI3ui
#define glVertexAttribI3uiv glfp.fns.VertexAttribI3uiv
#define glVertexAttribI4bv glfp.fns.VertexAttribI4bv
#define glVertexAttribI4i glfp.fns.VertexAttribI4i
#define glVertexAttribI4iv glfp.fns.VertexAttribI4iv
#define glVertexAttribI4sv glfp.fns.VertexAttribI4sv
#define glVertexAttribI4ubv glfp.fns.VertexAttribI4ubv
#define glVertexAttribI4ui glfp.fns.VertexAttribI4ui
#define glVertexAttribI4uiv glfp.fns.VertexAttribI4uiv
#define glVertexAttribI4usv glfp.fns.VertexAttribI4usv
#define glVertexAttribIPointer glfp.fns.VertexAttribIPointer

#define glCopyBufferSubData glfp.fns.CopyBufferSubData
#define glDrawArraysInstanced glfp.fns.DrawArraysInstanced
#define glDrawElementsInstanced glfp.fns.DrawElementsInstanced
#define glGetActiveUniformBlockName glfp.fns.GetActiveUniformBlockName
#define glGetActiveUniformBlockiv glfp.fns.GetActiveUniformBlockiv
#define glGetActiveUniformName glfp.fns.GetActiveUniformName
#define glGetActiveUniformsiv glfp.fns.GetActiveUniformsiv
#define glGetUniformBlockIndex glfp.fns.GetUniformBlockIndex
#define glGetUniformIndices glfp.fns.GetUniformIndices
#define glPrimitiveRestartIndex glfp.fns.PrimitiveRestartIndex
#define glTexBuffer glfp.fns.TexBuffer
#define glUniformBlockBinding glfp.fns.UniformBlockBinding

#define glClientWaitSync glfp.fns.ClientWaitSync
#define glDeleteSync glfp.fns.DeleteSync
#define glDrawElementsBaseVertex glfp.fns.DrawElementsBaseVertex
#define glDrawElementsInstancedBaseVertex glfp.fns.DrawElementsInstancedBaseVertex
#define glDrawRangeElementsBaseVertex glfp.fns.DrawRangeElementsBaseVertex
#define glFenceSync glfp.fns.FenceSync
#define glFramebufferTexture glfp.fns.FramebufferTexture
#define glGetBufferParameteri64v glfp.fns.GetBufferParameteri64v
#define glGetInteger64i_v glfp.fns.GetInteger64i_v
#define glGetInteger64v glfp.fns.GetInteger64v
#define glGetMultisamplefv glfp.fns.GetMultisamplefv
#define glGetSynciv glfp.fns.GetSynciv
#define glIsSync glfp.fns.IsSync
#define glMultiDrawElementsBaseVertex glfp.fns.MultiDrawElementsBaseVertex
#define glProvokingVertex glfp.fns.ProvokingVertex
#define glSampleMaski glfp.fns.SampleMaski
#define glTexImage2DMultisample glfp.fns.TexImage2DMultisample
#define glTexImage3DMultisample glfp.fns.TexImage3DMultisample
#define glWaitSync glfp.fns.WaitSync

#define glBindFragDataLocationIndexed glfp.fns.BindFragDataLocationIndexed
#define glBindSampler glfp.fns.BindSampler
#define glDeleteSamplers glfp.fns.DeleteSamplers
#define glGenSamplers glfp.fns.GenSamplers
#define glGetFragDataIndex glfp.fns.GetFragDataIndex
#define glGetQueryObjecti64v glfp.fns.GetQueryObjecti64v
#define glGetQueryObjectui64v glfp.fns.GetQueryObjectui64v
#define glGetSamplerParameterIiv glfp.fns.GetSamplerParameterIiv
#define glGetSamplerParameterIuiv glfp.fns.GetSamplerParameterIuiv
#define glGetSamplerParameterfv glfp.fns.GetSamplerParameterfv
#define glGetSamplerParameteriv glfp.fns.GetSamplerParameteriv
#define glIsSampler glfp.fns.IsSampler
#define glQueryCounter glfp.fns.QueryCounter
#define glSamplerParameterIiv glfp.fns.SamplerParameterIiv
#define glSamplerParameterIuiv glfp.fns.SamplerParameterIuiv
#define glSamplerParameterf glfp.fns.SamplerParameterf
#define glSamplerParameterfv glfp.fns.SamplerParameterfv
#define glSamplerParameteri glfp.fns.SamplerParameteri
#define glSamplerParameteriv glfp.fns.SamplerParameteriv
#define glVertexAttribDivisor glfp.fns.VertexAttribDivisor
#define glVertexAttribP1ui glfp.fns.VertexAttribP1ui
#define glVertexAttribP1uiv glfp.fns.VertexAttribP1uiv
#define glVertexAttribP2ui glfp.fns.VertexAttribP2ui
#define glVertexAttribP2uiv glfp.fns.VertexAttribP2uiv
#define glVertexAttribP3ui glfp.fns.VertexAttribP3ui
#define glVertexAttribP3uiv glfp.fns.VertexAttribP3uiv
#define glVertexAttribP4ui glfp.fns.VertexAttribP4ui
#define glVertexAttribP4uiv glfp.fns.VertexAttribP4uiv

#define glBeginQueryIndexed glfp.fns.BeginQueryIndexed
#define glBindTransformFeedback glfp.fns.BindTransformFeedback
#define glBlendEquationSeparatei glfp.fns.BlendEquationSeparatei
#define glBlendEquationi glfp.fns.BlendEquationi
#define glBlendFuncSeparatei glfp.fns.BlendFuncSeparatei
#define glBlendFunci glfp.fns.BlendFunci
#define glDeleteTransformFeedbacks glfp.fns.DeleteTransformFeedbacks
#define glDrawArraysIndirect glfp.fns.DrawArraysIndirect
#define glDrawElementsIndirect glfp.fns.DrawElementsIndirect
#define glDrawTransformFeedback glfp.fns.DrawTransformFeedback
#define glDrawTransformFeedbackStream glfp.fns.DrawTransformFeedbackStream
#define glEndQueryIndexed glfp.fns.EndQueryIndexed
#define glGenTransformFeedbacks glfp.fns.GenTransformFeedbacks
#define glGetActiveSubroutineName glfp.fns.GetActiveSubroutineName
#define glGetActiveSubroutineUniformName glfp.fns.GetActiveSubroutineUniformName
#define glGetActiveSubroutineUniformiv glfp.fns.GetActiveSubroutineUniformiv
#define glGetProgramStageiv glfp.fns.GetProgramStageiv
#define glGetQueryIndexediv glfp.fns.GetQueryIndexediv
#define glGetSubroutineIndex glfp.fns.GetSubroutineIndex
#define glGetSubroutineUniformLocation glfp.fns.GetSubroutineUniformLocation
#define glGetUniformSubroutineuiv glfp.fns.GetUniformSubroutineuiv
#define glGetUniformdv glfp.fns.GetUniformdv
#define glIsTransformFeedback glfp.fns.IsTransformFeedback
#define glMinSampleShading glfp.fns.MinSampleShading
#define glPatchParameterfv glfp.fns.PatchParameterfv
#define glPatchParameteri glfp.fns.PatchParameteri
#define glPauseTransformFeedback glfp.fns.PauseTransformFeedback
#define glResumeTransformFeedback glfp.fns.ResumeTransformFeedback
#define glUniform1d glfp.fns.Uniform1d
#define glUniform1dv glfp.fns.Uniform1dv
#define glUniform2d glfp.fns.Uniform2d
#define glUniform2dv glfp.fns.Uniform2dv
#define glUniform3d glfp.fns.Uniform3d
#define glUniform3dv glfp.fns.Uniform3dv
#define glUniform4d glfp.fns.Uniform4d
#define glUniform4dv glfp.fns.Uniform4dv
#define glUniformMatrix2dv glfp.fns.UniformMatrix2dv
#define glUniformMatrix2x3dv glfp.fns.UniformMatrix2x3dv
#define glUniformMatrix2x4dv glfp.fns.UniformMatrix2x4dv
#define glUniformMatrix3dv glfp.fns.UniformMatrix3dv
#define glUniformMatrix3x2dv glfp.fns.UniformMatrix3x2dv
#define glUniformMatrix3x4dv glfp.fns.UniformMatrix3x4dv
#define glUniformMatrix4dv glfp.fns.UniformMatrix4dv
#define glUniformMatrix4x2dv glfp.fns.UniformMatrix4x2dv
#define glUniformMatrix4x3dv glfp.fns.UniformMatrix4x3dv
#define glUniformSubroutinesuiv glfp.fns.UniformSubroutinesuiv

#define glActiveShaderProgram glfp.fns.ActiveShaderProgram
#define glBindProgramPipeline glfp.fns.BindProgramPipeline
#define glClearDepthf glfp.fns.ClearDepthf
#define glCreateShaderProgramv glfp.fns.CreateShaderProgramv
#define glDeleteProgramPipelines glfp.fns.DeleteProgramPipelines
#define glDepthRangeArrayv glfp.fns.DepthRangeArrayv
#define glDepthRangeIndexed glfp.fns.DepthRangeIndexed
#define glDepthRangef glfp.fns.DepthRangef
#define glGenProgramPipelines glfp.fns.GenProgramPipelines
#define glGetDoublei_v glfp.fns.GetDoublei_v
#define glGetFloati_v glfp.fns.GetFloati_v
#define glGetProgramBinary glfp.fns.GetProgramBinary
#define glGetProgramPipelineInfoLog glfp.fns.GetProgramPipelineInfoLog
#define glGetProgramPipelineiv glfp.fns.GetProgramPipelineiv
#define glGetShaderPrecisionFormat glfp.fns.GetShaderPrecisionFormat
#define glGetVertexAttribLdv glfp.fns.GetVertexAttribLdv
#define glIsProgramPipeline glfp.fns.IsProgramPipeline
#define glProgramBinary glfp.fns.ProgramBinary
#define glProgramParameteri glfp.fns.ProgramParameteri
#define glProgramUniform1d glfp.fns.ProgramUniform1d
#define glProgramUniform1dv glfp.fns.ProgramUniform1dv
#define glProgramUniform1f glfp.fns.ProgramUniform1f
#define glProgramUniform1fv glfp.fns.ProgramUniform1fv
#define glProgramUniform1i glfp.fns.ProgramUniform1i
#define glProgramUniform1iv glfp.fns.ProgramUniform1iv
#define glProgramUniform1ui glfp.fns.ProgramUniform1ui
#define glProgramUniform1uiv glfp.fns.ProgramUniform1uiv
#define glProgramUniform2d glfp.fns.ProgramUniform2d
#define glProgramUniform2dv glfp.fns.ProgramUniform2dv
#define glProgramUniform2f glfp.fns.ProgramUniform2f
#define glProgramUniform2fv glfp.fns.ProgramUniform2fv
#define glProgramUniform2i glfp.fns.ProgramUniform2i
#define glProgramUniform2iv glfp.fns.ProgramUniform2iv
#define glProgramUniform2ui glfp.fns.ProgramUniform2ui
#define glProgramUniform2uiv glfp.fns.ProgramUniform2uiv
#define glProgramUniform3d glfp.fns.ProgramUniform3d
#define glProgramUniform3dv glfp.fns.ProgramUniform3dv
#define glProgramUniform3f glfp.fns.ProgramUniform3f
#define glProgramUniform3fv glfp.fns.ProgramUniform3fv
#define glProgramUniform3i glfp.fns.ProgramUniform3i
#define glProgramUniform3iv glfp.fns.ProgramUniform3iv
#define glProgramUniform3ui glfp.fns.ProgramUniform3ui
#define glProgramUniform3uiv glfp.fns.ProgramUniform3uiv
#define glProgramUniform4d glfp.fns.ProgramUniform4d
#define glProgramUniform4dv glfp.fns.ProgramUniform4dv
#define glProgramUniform4f glfp.fns.ProgramUniform4f
#define glProgramUniform4fv glfp.fns.ProgramUniform4fv
#define glProgramUniform4i glfp.fns.ProgramUniform4i
#define glProgramUniform4iv glfp.fns.ProgramUniform4iv
#define glProgramUniform4ui glfp.fns.ProgramUniform4ui
#define glProgramUniform4uiv glfp.fns.ProgramUniform4uiv
#define glProgramUniformMatrix2dv glfp.fns.ProgramUniformMatrix2dv
#define glProgramUniformMatrix2fv glfp.fns.ProgramUniformMatrix2fv
#define glProgramUniformMatrix2x3dv glfp.fns.ProgramUniformMatrix2x3dv
#define glProgramUniformMatrix2x3fv glfp.fns.ProgramUniformMatrix2x3fv
#define glProgramUniformMatrix2x4dv glfp.fns.ProgramUniformMatrix2x4dv
#define glProgramUniformMatrix2x4fv glfp.fns.ProgramUniformMatrix2x4fv
#define glProgramUniformMatrix3dv glfp.fns.ProgramUniformMatrix3dv
#define glProgramUniformMatrix3fv glfp.fns.ProgramUniformMatrix3fv
#define glProgramUniformMatrix3x2dv glfp.fns.ProgramUniformMatrix3x2dv
#define glProgramUniformMatrix3x2fv glfp.fns.ProgramUniformMatrix3x2fv
#define glProgramUniformMatrix3x4dv glfp.fns.ProgramUniformMatrix3x4dv
#define glProgramUniformMatrix3x4fv glfp.fns.ProgramUniformMatrix3x4fv
#define glProgramUniformMatrix4dv glfp.fns.ProgramUniformMatrix4dv
#define glProgramUniformMatrix4fv glfp.fns.ProgramUniformMatrix4fv
#define glProgramUniformMatrix4x2dv glfp.fns.ProgramUniformMatrix4x2dv
#define glProgramUniformMatrix4x2fv glfp.fns.ProgramUniformMatrix4x2fv
#define glProgramUniformMatrix4x3dv glfp.fns.ProgramUniformMatrix4x3dv
#define glProgramUniformMatrix4x3fv glfp.fns.ProgramUniformMatrix4x3fv
#define glReleaseShaderCompiler glfp.fns.ReleaseShaderCompiler
#define glScissorArrayv glfp.fns.ScissorArrayv
#define glScissorIndexed glfp.fns.ScissorIndexed
#define glScissorIndexedv glfp.fns.ScissorIndexedv
#define glShaderBinary glfp.fns.ShaderBinary
#define glUseProgramStages glfp.fns.UseProgramStages
#define glValidateProgramPipeline glfp.fns.ValidateProgramPipeline
#define glVertexAttribL1d glfp.fns.VertexAttribL1d
#define glVertexAttribL1dv glfp.fns.VertexAttribL1dv
#define glVertexAttribL2d glfp.fns.VertexAttribL2d
#define glVertexAttribL2dv glfp.fns.VertexAttribL2dv
#define glVertexAttribL3d glfp.fns.VertexAttribL3d
#define glVertexAttribL3dv glfp.fns.VertexAttribL3dv
#define glVertexAttribL4d glfp.fns.VertexAttribL4d
#define glVertexAttribL4dv glfp.fns.VertexAttribL4dv
#define glVertexAttribLPointer glfp.fns.VertexAttribLPointer
#define glViewportArrayv glfp.fns.ViewportArrayv
#define glViewportIndexedf glfp.fns.ViewportIndexedf
#define glViewportIndexedfv glfp.fns.ViewportIndexedfv

#define glBindImageTexture glfp.fns.BindImageTexture
#define glDrawArraysInstancedBaseInstance glfp.fns.DrawArraysInstancedBaseInstance
#define glDrawElementsInstancedBaseInstance glfp.fns.DrawElementsInstancedBaseInstance
#define glDrawElementsInstancedBaseVertexBaseInstance glfp.fns.DrawElementsInstancedBaseVertexBaseInstance
#define glDrawTransformFeedbackInstanced glfp.fns.DrawTransformFeedbackInstanced
#define glDrawTransformFeedbackStreamInstanced glfp.fns.DrawTransformFeedbackStreamInstanced
#define glGetActiveAtomicCounterBufferiv glfp.fns.GetActiveAtomicCounterBufferiv
#define glGetInternalformativ glfp.fns.GetInternalformativ
#define glMemoryBarrier glfp.fns.MemoryBarrier
#define glTexStorage1D glfp.fns.TexStorage1D
#define glTexStorage2D glfp.fns.TexStorage2D
#define glTexStorage3D glfp.fns.TexStorage3D

#define glBindVertexBuffer glfp.fns.BindVertexBuffer
#define glClearBufferData glfp.fns.ClearBufferData
#define glClearBufferSubData glfp.fns.ClearBufferSubData
#define glCopyImageSubData glfp.fns.CopyImageSubData
#define glDebugMessageCallback glfp.fns.DebugMessageCallback
#define glDebugMessageControl glfp.fns.DebugMessageControl
#define glDebugMessageInsert glfp.fns.DebugMessageInsert
#define glDispatchCompute glfp.fns.DispatchCompute
#define glDispatchComputeIndirect glfp.fns.DispatchComputeIndirect
#define glFramebufferParameteri glfp.fns.FramebufferParameteri
#define glGetDebugMessageLog glfp.fns.GetDebugMessageLog
#define glGetFramebufferParameteriv glfp.fns.GetFramebufferParameteriv
#define glGetInternalformati64v glfp.fns.GetInternalformati64v
#define glGetObjectLabel glfp.fns.GetObjectLabel
#define glGetObjectPtrLabel glfp.fns.GetObjectPtrLabel
#define glGetPointerv glfp.fns.GetPointerv
#define glGetProgramInterfaceiv glfp.fns.GetProgramInterfaceiv
#define glGetProgramResourceIndex glfp.fns.GetProgramResourceIndex
#define glGetProgramResourceLocation glfp.fns.GetProgramResourceLocation
#define glGetProgramResourceLocationIndex glfp.fns.GetProgramResourceLocationIndex
#define glGetProgramResourceName glfp.fns.GetProgramResourceName
#define glGetProgramResourceiv glfp.fns.GetProgramResourceiv
#define glInvalidateBufferData glfp.fns.InvalidateBufferData
#define glInvalidateBufferSubData glfp.fns.InvalidateBufferSubData
#define glInvalidateFramebuffer glfp.fns.InvalidateFramebuffer
#define glInvalidateSubFramebuffer glfp.fns.InvalidateSubFramebuffer
#define glInvalidateTexImage glfp.fns.InvalidateTexImage
#define glInvalidateTexSubImage glfp.fns.InvalidateTexSubImage
#define glMultiDrawArraysIndirect glfp.fns.MultiDrawArraysIndirect
#define glMultiDrawElementsIndirect glfp.fns.MultiDrawElementsIndirect
#define glObjectLabel glfp.fns.ObjectLabel
#define glObjectPtrLabel glfp.fns.ObjectPtrLabel
#define glPopDebugGroup glfp.fns.PopDebugGroup
#define glPushDebugGroup glfp.fns.PushDebugGroup
#define glShaderStorageBlockBinding glfp.fns.ShaderStorageBlockBinding
#define glTexBufferRange glfp.fns.TexBufferRange
#define glTexStorage2DMultisample glfp.fns.TexStorage2DMultisample
#define glTexStorage3DMultisample glfp.fns.TexStorage3DMultisample
#define glTextureView glfp.fns.TextureView
#define glVertexAttribBinding glfp.fns.VertexAttribBinding
#define glVertexAttribFormat glfp.fns.VertexAttribFormat
#define glVertexAttribIFormat glfp.fns.VertexAttribIFormat
#define glVertexAttribLFormat glfp.fns.VertexAttribLFormat
#define glVertexBindingDivisor glfp.fns.VertexBindingDivisor

#define glBindBuffersBase glfp.fns.BindBuffersBase
#define glBindBuffersRange glfp.fns.BindBuffersRange
#define glBindImageTextures glfp.fns.BindImageTextures
#define glBindSamplers glfp.fns.BindSamplers
#define glBindTextures glfp.fns.BindTextures
#define glBindVertexBuffers glfp.fns.BindVertexBuffers
#define glBufferStorage glfp.fns.BufferStorage
#define glClearTexImage glfp.fns.ClearTexImage
#define glClearTexSubImage glfp.fns.ClearTexSubImage


/* --------------------------- CATEGORY DEFINES ------------------------------ */

#define GL_EXT_direct_state_access
#define GL_VERSION_1_0
#define GL_VERSION_1_1
#define GL_VERSION_1_2
#define GL_VERSION_1_3
#define GL_VERSION_1_4
#define GL_VERSION_1_5
#define GL_VERSION_2_0
#define GL_VERSION_2_1
#define GL_VERSION_3_0
#define GL_VERSION_3_1
#define GL_VERSION_3_2
#define GL_VERSION_3_3
#define GL_VERSION_4_0
#define GL_VERSION_4_1
#define GL_VERSION_4_2
#define GL_VERSION_4_3
#define GL_VERSION_4_4

/* ---------------------- Flags for optional extensions ---------------------- */

extern int GLEXT_EXT_direct_state_access;

int importOpenGL(void);

#define GLEXT_MAJOR_VERSION 4
#define GLEXT_MINOR_VERSION 4
#define GLEXT_CORE_PROFILE 1

#ifdef __cplusplus
}
#endif

#endif /* _gl_h_ */
